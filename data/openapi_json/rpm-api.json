{
    "openapi": "3.1.1",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        },
        "x-pulp-app-versions": {
            "rpm": "3.29.0.dev",
            "core": "3.72.0"
        },
        "x-pulp-domain-enabled": false
    },
    "paths": {
        "/pulp/api/v3/acs/rpm/rpm/": {
            "get": {
                "operationId": "acs_rpm_rpm_list",
                "description": "ViewSet for ACS.",
                "summary": "List rpm alternate content sources",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_refreshed",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "last_refreshed",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_refreshed` - Last refreshed\n* `-last_refreshed` - Last refreshed (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmAlternateContentSourceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "acs_rpm_rpm_create",
                "description": "ViewSet for ACS.",
                "summary": "Create a rpm alternate content source",
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}": {
            "get": {
                "operationId": "acs_rpm_rpm_read",
                "description": "ViewSet for ACS.",
                "summary": "Inspect a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "acs_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "acs_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmAlternateContentSource"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "acs_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete ACS task",
                "summary": "Delete a rpm alternate content source",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}add_role/": {
            "post": {
                "operationId": "acs_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}list_roles/": {
            "get": {
                "operationId": "acs_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}my_permissions/": {
            "get": {
                "operationId": "acs_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}refresh/": {
            "post": {
                "operationId": "acs_rpm_rpm_refresh",
                "description": "Trigger an asynchronous task to create Alternate Content Source content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_alternate_content_source_href}remove_role/": {
            "post": {
                "operationId": "acs_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_alternate_content_source_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Acs: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/advisories/": {
            "get": {
                "operationId": "content_rpm_advisories_list",
                "description": "A ViewSet for UpdateRecord.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.",
                "summary": "List update records",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where id matches value"
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-digest",
                                    "-fromstr",
                                    "-id",
                                    "-issued_date",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-pushcount",
                                    "-reboot_suggested",
                                    "-release",
                                    "-rights",
                                    "-severity",
                                    "-solution",
                                    "-status",
                                    "-summary",
                                    "-timestamp_of_interest",
                                    "-title",
                                    "-type",
                                    "-updated_date",
                                    "-upstream_id",
                                    "-version",
                                    "description",
                                    "digest",
                                    "fromstr",
                                    "id",
                                    "issued_date",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "pushcount",
                                    "reboot_suggested",
                                    "release",
                                    "rights",
                                    "severity",
                                    "solution",
                                    "status",
                                    "summary",
                                    "timestamp_of_interest",
                                    "title",
                                    "type",
                                    "updated_date",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `id` - Id\n* `-id` - Id (descending)\n* `updated_date` - Updated date\n* `-updated_date` - Updated date (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `issued_date` - Issued date\n* `-issued_date` - Issued date (descending)\n* `fromstr` - Fromstr\n* `-fromstr` - Fromstr (descending)\n* `status` - Status\n* `-status` - Status (descending)\n* `title` - Title\n* `-title` - Title (descending)\n* `summary` - Summary\n* `-summary` - Summary (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `type` - Type\n* `-type` - Type (descending)\n* `severity` - Severity\n* `-severity` - Severity (descending)\n* `solution` - Solution\n* `-solution` - Solution (descending)\n* `release` - Release\n* `-release` - Release (descending)\n* `rights` - Rights\n* `-rights` - Rights (descending)\n* `reboot_suggested` - Reboot suggested\n* `-reboot_suggested` - Reboot suggested (descending)\n* `pushcount` - Pushcount\n* `-pushcount` - Pushcount (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "severity",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where severity matches value"
                    },
                    {
                        "in": "query",
                        "name": "severity__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where severity is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "severity__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where severity not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where status matches value"
                    },
                    {
                        "in": "query",
                        "name": "status__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where status is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where status not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where type matches value"
                    },
                    {
                        "in": "query",
                        "name": "type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where type is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "type__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where type not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Advisories"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.UpdateRecordResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_advisories_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an update record",
                "tags": [
                    "Content: Advisories"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UpdateRecord"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UpdateRecord"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_update_record_href}": {
            "get": {
                "operationId": "content_rpm_advisories_read",
                "description": "A ViewSet for UpdateRecord.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/advisories/\n\nAlso specify queryset and serializer for UpdateRecord.",
                "summary": "Inspect an update record",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_update_record_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Advisories"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UpdateRecordResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/distribution_trees/": {
            "get": {
                "operationId": "content_rpm_distribution_trees_list",
                "description": "Distribution Tree Viewset.",
                "summary": "List distribution trees",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Distribution_Trees"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.DistributionTreeResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_distribution_tree_href}": {
            "get": {
                "operationId": "content_rpm_distribution_trees_read",
                "description": "Distribution Tree Viewset.",
                "summary": "Inspect a distribution tree",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_distribution_tree_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Distribution_Trees"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.DistributionTreeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemd_defaults/": {
            "get": {
                "operationId": "content_rpm_modulemd_defaults_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemd defaultss",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "module",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where module matches value"
                    },
                    {
                        "in": "query",
                        "name": "module__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where module is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-digest",
                                    "-module",
                                    "-pk",
                                    "-profiles",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-snippet",
                                    "-stream",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "digest",
                                    "module",
                                    "pk",
                                    "profiles",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "snippet",
                                    "stream",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `module` - Module\n* `-module` - Module (descending)\n* `stream` - Stream\n* `-stream` - Stream (descending)\n* `profiles` - Profiles\n* `-profiles` - Profiles (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `snippet` - Snippet\n* `-snippet` - Snippet (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stream",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where stream matches value"
                    },
                    {
                        "in": "query",
                        "name": "stream__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where stream is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdDefaultsResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemd_defaults_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd defaults",
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdDefaults"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_defaults_href}": {
            "get": {
                "operationId": "content_rpm_modulemd_defaults_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd defaults",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_defaults_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Defaults"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdDefaultsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemd_obsoletes/": {
            "get": {
                "operationId": "content_rpm_modulemd_obsoletes_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemd obsoletes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdObsoleteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemd_obsoletes_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd obsolete",
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.ModulemdObsolete"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_obsolete_href}": {
            "get": {
                "operationId": "content_rpm_modulemd_obsoletes_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd obsolete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_obsolete_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemd_Obsoletes"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdObsoleteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/modulemds/": {
            "get": {
                "operationId": "content_rpm_modulemds_list",
                "description": "ViewSet for Modulemd.",
                "summary": "List modulemds",
                "parameters": [
                    {
                        "in": "query",
                        "name": "arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "arch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where arch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "context",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where context matches value"
                    },
                    {
                        "in": "query",
                        "name": "context__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where context is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-arch",
                                    "-artifacts",
                                    "-context",
                                    "-dependencies",
                                    "-description",
                                    "-digest",
                                    "-name",
                                    "-pk",
                                    "-profiles",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-snippet",
                                    "-static_context",
                                    "-stream",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "arch",
                                    "artifacts",
                                    "context",
                                    "dependencies",
                                    "description",
                                    "digest",
                                    "name",
                                    "pk",
                                    "profiles",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "snippet",
                                    "static_context",
                                    "stream",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `stream` - Stream\n* `-stream` - Stream (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `context` - Context\n* `-context` - Context (descending)\n* `arch` - Arch\n* `-arch` - Arch (descending)\n* `static_context` - Static context\n* `-static_context` - Static context (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `artifacts` - Artifacts\n* `-artifacts` - Artifacts (descending)\n* `profiles` - Profiles\n* `-profiles` - Profiles (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `snippet` - Snippet\n* `-snippet` - Snippet (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "stream",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where stream matches value"
                    },
                    {
                        "in": "query",
                        "name": "stream__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where stream is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "version__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where version is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemds"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.ModulemdResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_modulemds_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a modulemd",
                "tags": [
                    "Content: Modulemds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Modulemd"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_modulemd_href}": {
            "get": {
                "operationId": "content_rpm_modulemds_read",
                "description": "ViewSet for Modulemd.",
                "summary": "Inspect a modulemd",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_modulemd_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Modulemds"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.ModulemdResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagecategories/": {
            "get": {
                "operationId": "content_rpm_packagecategories_list",
                "description": "PackageCategory ViewSet.",
                "summary": "List package categorys",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagecategories"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageCategoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_category_href}": {
            "get": {
                "operationId": "content_rpm_packagecategories_read",
                "description": "PackageCategory ViewSet.",
                "summary": "Inspect a package category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_category_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagecategories"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageCategoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packageenvironments/": {
            "get": {
                "operationId": "content_rpm_packageenvironments_list",
                "description": "PackageEnvironment ViewSet.",
                "summary": "List package environments",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packageenvironments"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageEnvironmentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_environment_href}": {
            "get": {
                "operationId": "content_rpm_packageenvironments_read",
                "description": "PackageEnvironment ViewSet.",
                "summary": "Inspect a package environment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_environment_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packageenvironments"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageEnvironmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagegroups/": {
            "get": {
                "operationId": "content_rpm_packagegroups_list",
                "description": "PackageGroup ViewSet.",
                "summary": "List package groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagegroups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_group_href}": {
            "get": {
                "operationId": "content_rpm_packagegroups_read",
                "description": "PackageGroup ViewSet.",
                "summary": "Inspect a package group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagegroups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packagelangpacks/": {
            "get": {
                "operationId": "content_rpm_packagelangpacks_list",
                "description": "PackageLangpacks ViewSet.",
                "summary": "List package langpackss",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagelangpacks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageLangpacksResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_langpacks_href}": {
            "get": {
                "operationId": "content_rpm_packagelangpacks_read",
                "description": "PackageLangpacks ViewSet.",
                "summary": "Inspect a package langpacks",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_langpacks_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packagelangpacks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageLangpacksResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/packages/": {
            "get": {
                "operationId": "content_rpm_packages_list",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.",
                "summary": "List packages",
                "parameters": [
                    {
                        "in": "query",
                        "name": "arch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch matches value"
                    },
                    {
                        "in": "query",
                        "name": "arch__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch contains value"
                    },
                    {
                        "in": "query",
                        "name": "arch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where arch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "arch__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "arch__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where arch starts with value"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "md5",
                                "sha1",
                                "sha1",
                                "sha224",
                                "sha256",
                                "sha384",
                                "sha512",
                                "unknown"
                            ]
                        },
                        "description": "Filter results where checksum_type matches value\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where checksum_type is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "checksum_type__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where checksum_type not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "epoch",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where epoch matches value"
                    },
                    {
                        "in": "query",
                        "name": "epoch__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where epoch is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "epoch__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where epoch not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-arch",
                                    "-changelogs",
                                    "-checksum_type",
                                    "-conflicts",
                                    "-description",
                                    "-enhances",
                                    "-epoch",
                                    "-evr",
                                    "-files",
                                    "-is_modular",
                                    "-location_base",
                                    "-location_href",
                                    "-name",
                                    "-obsoletes",
                                    "-pk",
                                    "-pkgId",
                                    "-provides",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-recommends",
                                    "-release",
                                    "-requires",
                                    "-rpm_buildhost",
                                    "-rpm_group",
                                    "-rpm_header_end",
                                    "-rpm_header_start",
                                    "-rpm_license",
                                    "-rpm_packager",
                                    "-rpm_sourcerpm",
                                    "-rpm_vendor",
                                    "-size_archive",
                                    "-size_installed",
                                    "-size_package",
                                    "-suggests",
                                    "-summary",
                                    "-supplements",
                                    "-time_build",
                                    "-time_file",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-url",
                                    "-version",
                                    "arch",
                                    "changelogs",
                                    "checksum_type",
                                    "conflicts",
                                    "description",
                                    "enhances",
                                    "epoch",
                                    "evr",
                                    "files",
                                    "is_modular",
                                    "location_base",
                                    "location_href",
                                    "name",
                                    "obsoletes",
                                    "pk",
                                    "pkgId",
                                    "provides",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "recommends",
                                    "release",
                                    "requires",
                                    "rpm_buildhost",
                                    "rpm_group",
                                    "rpm_header_end",
                                    "rpm_header_start",
                                    "rpm_license",
                                    "rpm_packager",
                                    "rpm_sourcerpm",
                                    "rpm_vendor",
                                    "size_archive",
                                    "size_installed",
                                    "size_package",
                                    "suggests",
                                    "summary",
                                    "supplements",
                                    "time_build",
                                    "time_file",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "url",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `epoch` - Epoch\n* `-epoch` - Epoch (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `release` - Release\n* `-release` - Release (descending)\n* `arch` - Arch\n* `-arch` - Arch (descending)\n* `evr` - Evr\n* `-evr` - Evr (descending)\n* `pkgId` - Pkgid\n* `-pkgId` - Pkgid (descending)\n* `checksum_type` - Checksum type\n* `-checksum_type` - Checksum type (descending)\n* `summary` - Summary\n* `-summary` - Summary (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `changelogs` - Changelogs\n* `-changelogs` - Changelogs (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `requires` - Requires\n* `-requires` - Requires (descending)\n* `provides` - Provides\n* `-provides` - Provides (descending)\n* `conflicts` - Conflicts\n* `-conflicts` - Conflicts (descending)\n* `obsoletes` - Obsoletes\n* `-obsoletes` - Obsoletes (descending)\n* `suggests` - Suggests\n* `-suggests` - Suggests (descending)\n* `enhances` - Enhances\n* `-enhances` - Enhances (descending)\n* `recommends` - Recommends\n* `-recommends` - Recommends (descending)\n* `supplements` - Supplements\n* `-supplements` - Supplements (descending)\n* `location_base` - Location base\n* `-location_base` - Location base (descending)\n* `location_href` - Location href\n* `-location_href` - Location href (descending)\n* `rpm_buildhost` - Rpm buildhost\n* `-rpm_buildhost` - Rpm buildhost (descending)\n* `rpm_group` - Rpm group\n* `-rpm_group` - Rpm group (descending)\n* `rpm_license` - Rpm license\n* `-rpm_license` - Rpm license (descending)\n* `rpm_packager` - Rpm packager\n* `-rpm_packager` - Rpm packager (descending)\n* `rpm_sourcerpm` - Rpm sourcerpm\n* `-rpm_sourcerpm` - Rpm sourcerpm (descending)\n* `rpm_vendor` - Rpm vendor\n* `-rpm_vendor` - Rpm vendor (descending)\n* `rpm_header_start` - Rpm header start\n* `-rpm_header_start` - Rpm header start (descending)\n* `rpm_header_end` - Rpm header end\n* `-rpm_header_end` - Rpm header end (descending)\n* `size_archive` - Size archive\n* `-size_archive` - Size archive (descending)\n* `size_installed` - Size installed\n* `-size_installed` - Size installed (descending)\n* `size_package` - Size package\n* `-size_package` - Size package (descending)\n* `time_build` - Time build\n* `-time_build` - Time build (descending)\n* `time_file` - Time file\n* `-time_file` - Time file (descending)\n* `is_modular` - Is modular\n* `-is_modular` - Is modular (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "pkgId",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where pkgId matches value"
                    },
                    {
                        "in": "query",
                        "name": "pkgId__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where pkgId is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "release",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release matches value"
                    },
                    {
                        "in": "query",
                        "name": "release__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release contains value"
                    },
                    {
                        "in": "query",
                        "name": "release__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where release is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "release__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "release__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where release starts with value"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "version__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where version is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "version__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.PackageResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_rpm_packages_create",
                "description": "Trigger an asynchronous task to create an RPM package,optionally create new repository version.",
                "summary": "Create a package",
                "tags": [
                    "Content: Packages"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Package"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.Package"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_package_href}": {
            "get": {
                "operationId": "content_rpm_packages_read",
                "description": "A ViewSet for Package.\n\nDefine endpoint name which will appear in the API endpoint for this content type.\nFor example::\n    http://pulp.example.com/pulp/api/v3/content/rpm/packages/\n\nAlso specify queryset and serializer for Package.",
                "summary": "Inspect a package",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_package_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Packages"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.PackageResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/rpm/repo_metadata_files/": {
            "get": {
                "operationId": "content_rpm_repo_metadata_files_list",
                "description": "RepoMetadataFile Viewset.",
                "summary": "List repo metadata files",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Repo_Metadata_Files"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RepoMetadataFileResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_repo_metadata_file_href}": {
            "get": {
                "operationId": "content_rpm_repo_metadata_files_read",
                "description": "RepoMetadataFile Viewset.",
                "summary": "Inspect a repo metadata file",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_repo_metadata_file_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Repo_Metadata_Files"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RepoMetadataFileResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/rpm/rpm/": {
            "get": {
                "operationId": "distributions_rpm_rpm_list",
                "description": "ViewSet for RPM Distributions.",
                "summary": "List rpm distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_rpm_rpm_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create a rpm distribution",
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}": {
            "get": {
                "operationId": "distributions_rpm_rpm_read",
                "description": "ViewSet for RPM Distributions.",
                "summary": "Inspect a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/publications/rpm/rpm/": {
            "get": {
                "operationId": "publications_rpm_rpm_list",
                "description": "ViewSet for Rpm Publications.",
                "summary": "List rpm publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "publications_rpm_rpm_create",
                "description": "Trigger an asynchronous task to create a new RPM content publication.",
                "summary": "Create a rpm publication",
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmPublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}": {
            "get": {
                "operationId": "publications_rpm_rpm_read",
                "description": "ViewSet for Rpm Publications.",
                "summary": "Inspect a rpm publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmPublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "publications_rpm_rpm_delete",
                "description": "ViewSet for Rpm Publications.",
                "summary": "Delete a rpm publication",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}add_role/": {
            "post": {
                "operationId": "publications_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}list_roles/": {
            "get": {
                "operationId": "publications_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}my_permissions/": {
            "get": {
                "operationId": "publications_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_publication_href}remove_role/": {
            "post": {
                "operationId": "publications_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/rpm/rpm/": {
            "get": {
                "operationId": "remotes_rpm_rpm_list",
                "description": "A ViewSet for RpmRemote.",
                "summary": "List rpm remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_rpm_rpm_create",
                "description": "A ViewSet for RpmRemote.",
                "summary": "Create a rpm remote",
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}": {
            "get": {
                "operationId": "remotes_rpm_rpm_read",
                "description": "A ViewSet for RpmRemote.",
                "summary": "Inspect a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/rpm/uln/": {
            "get": {
                "operationId": "remotes_rpm_uln_list",
                "description": "A ViewSet for UlnRemote.",
                "summary": "List uln remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.UlnRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_rpm_uln_create",
                "description": "A ViewSet for UlnRemote.",
                "summary": "Create an uln remote",
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}": {
            "get": {
                "operationId": "remotes_rpm_uln_read",
                "description": "A ViewSet for UlnRemote.",
                "summary": "Inspect an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_rpm_uln_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_rpm_uln_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.UlnRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_rpm_uln_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an uln remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_rpm_uln_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_rpm_uln_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_rpm_uln_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_rpm_uln_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_rpm_uln_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_uln_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_rpm_uln_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_uln_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Uln"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/rpm/rpm/": {
            "get": {
                "operationId": "repositories_rpm_rpm_list",
                "description": "A ViewSet for RpmRepository.",
                "summary": "List rpm repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedrpm.RpmRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_rpm_rpm_create",
                "description": "A ViewSet for RpmRepository.",
                "summary": "Create a rpm repository",
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}": {
            "get": {
                "operationId": "repositories_rpm_rpm_read",
                "description": "A ViewSet for RpmRepository.",
                "summary": "Inspect a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_rpm_rpm_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/rpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_rpm_rpm_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedrpm.RpmRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_rpm_rpm_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a rpm repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_rpm_rpm_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_rpm_rpm_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}modify/": {
            "post": {
                "operationId": "repositories_rpm_rpm_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_rpm_rpm_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_rpm_rpm_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_rpm_rpm_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}sync/": {
            "post": {
                "operationId": "repositories_rpm_rpm_sync",
                "description": "Trigger an asynchronous task to sync RPM content.",
                "summary": "Sync from remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RpmRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_rpm_rpm_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_href}versions/": {
            "get": {
                "operationId": "repositories_rpm_rpm_versions_list",
                "description": "RpmRepositoryVersion represents a single rpm repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_version_href}": {
            "get": {
                "operationId": "repositories_rpm_rpm_versions_read",
                "description": "RpmRepositoryVersion represents a single rpm repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_rpm_rpm_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{rpm_rpm_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_rpm_rpm_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "rpm_rpm_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Rpm Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/rpm/comps/": {
            "post": {
                "operationId": "rpm_comps_upload",
                "description": "Trigger an asynchronous task to upload a comps.xml file.",
                "summary": "Upload comps.xml",
                "tags": [
                    "Rpm: Comps"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompsXml"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompsXml"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/rpm/copy/": {
            "post": {
                "operationId": "copy_content",
                "description": "Trigger an asynchronous task to copy RPM contentfrom one repository into another, creating a newrepository version.",
                "summary": "Copy content",
                "tags": [
                    "Rpm: Copy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/rpm/prune/": {
            "post": {
                "operationId": "rpm_prune_prune_packages",
                "description": "Trigger an asynchronous old-Package-prune operation.",
                "tags": [
                    "Rpm: Prune"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PrunePackages"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PrunePackages"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PrunePackages"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddonResponse": {
                "type": "object",
                "description": "Addon serializer.",
                "properties": {
                    "addon_id": {
                        "type": "string",
                        "description": "Addon id."
                    },
                    "uid": {
                        "type": "string",
                        "description": "Addon uid."
                    },
                    "name": {
                        "type": "string",
                        "description": "Addon name."
                    },
                    "type": {
                        "type": "string",
                        "description": "Addon type."
                    },
                    "packages": {
                        "type": "string",
                        "description": "Relative path to directory with binary RPMs."
                    }
                },
                "required": [
                    "addon_id",
                    "name",
                    "packages",
                    "type",
                    "uid"
                ]
            },
            "ArtifactResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "file": {
                        "type": "string",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ChecksumResponse": {
                "type": "object",
                "description": "Checksum serializer.",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "File path."
                    },
                    "checksum": {
                        "type": "string",
                        "description": "Checksum for the file."
                    }
                },
                "required": [
                    "checksum",
                    "path"
                ]
            },
            "CompressionTypeEnum": {
                "enum": [
                    "zstd",
                    "gz"
                ],
                "type": "string",
                "description": "* `zstd` - zstd\n* `gz` - gz"
            },
            "CompsXml": {
                "type": "object",
                "description": "A serializer for comps.xml Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "Full path of a comps.xml file that may be parsed into comps.xml Content units."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "URI of an RPM repository the comps.xml content units should be associated to."
                    },
                    "replace": {
                        "type": "boolean",
                        "writeOnly": true,
                        "description": "If true, incoming comps.xml replaces existing comps-related ContentUnits in the specified repository."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "removed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "present": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "Copy": {
                "type": "object",
                "description": "A serializer for Content Copy API.",
                "properties": {
                    "config": {
                        "description": "Content to be copied into the given destinations from the given sources.\n\nIts a list of dictionaries with the following available fields:\n\n```json\n[\n  {\n    \"source_repo_version\": <RepositoryVersion [pulp_href|prn]>,\n    \"dest_repo\": <RpmRepository [pulp_href|prn]>,\n    \"dest_base_version\": <int>,\n    \"content\": [<Content [pulp_href|prn]>, ...]\n  },\n  ...\n]\n```\n\nIf domains are enabled, the refered pulp objects must be part of the current domain.\n\nFor usage examples, refer to the advanced copy guide:\n<https://pulpproject.org/pulp_rpm/docs/user/guides/modify/#advanced-copy-workflow>\n"
                    },
                    "dependency_solving": {
                        "type": "boolean",
                        "default": true,
                        "description": "Also copy dependencies of the content being copied."
                    }
                },
                "required": [
                    "config"
                ]
            },
            "ImageResponse": {
                "type": "object",
                "description": "Image serializer.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "File name."
                    },
                    "path": {
                        "type": "string",
                        "description": "File path."
                    },
                    "platforms": {
                        "type": "string",
                        "description": "Compatible platforms."
                    },
                    "artifact": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactResponse"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "path",
                    "platforms"
                ]
            },
            "MyPermissionsResponse": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "NestedRole": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "role"
                ]
            },
            "NestedRoleResponse": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "ObjectRolesResponse": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedRoleResponse"
                        }
                    }
                },
                "required": [
                    "roles"
                ]
            },
            "PackageChecksumTypeEnum": {
                "enum": [
                    "unknown",
                    "md5",
                    "sha1",
                    "sha224",
                    "sha256",
                    "sha384",
                    "sha512"
                ],
                "type": "string",
                "description": "* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.DistributionTreeResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.DistributionTreeResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdDefaultsResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdDefaultsResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdObsoleteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdObsoleteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.ModulemdResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.ModulemdResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageCategoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageCategoryResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageEnvironmentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageEnvironmentResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageGroupResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageGroupResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageLangpacksResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageLangpacksResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.PackageResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.PackageResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RepoMetadataFileResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RepoMetadataFileResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmAlternateContentSourceResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmAlternateContentSourceResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmPublicationResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmPublicationResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.RpmRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.RpmRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.UlnRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UlnRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedrpm.UpdateRecordResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UpdateRecordResponse"
                        }
                    }
                }
            },
            "Patchedrpm.RpmAlternateContentSource": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                }
            },
            "Patchedrpm.RpmDistribution": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                }
            },
            "Patchedrpm.RpmRemote": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sles_auth_token": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Authentication token for SLES repositories."
                    }
                }
            },
            "Patchedrpm.RpmRepository": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Retain X versions of the repository. Default is null which retains all versions."
                    },
                    "remote": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated signing service."
                    },
                    "package_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated package signing service."
                    },
                    "package_signing_fingerprint": {
                        "type": "string",
                        "default": "",
                        "description": "The pubkey V4 fingerprint (160 bits) to be passed to the package signing service.The signing service will use that on signing operations related to this repository.",
                        "maxLength": 40
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages."
                    },
                    "repo_gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata."
                    },
                    "repo_config": {
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "Patchedrpm.UlnRemote": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account username."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account password."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "uln_server_base_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                }
            },
            "PolicyEnum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string",
                "description": "* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
            },
            "PrunePackages": {
                "type": "object",
                "description": "Serializer for prune-old-Packages operation.",
                "properties": {
                    "repo_hrefs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Will prune old packages from the specified list of repos. Use ['*'] to specify all repos. Will prune based on the specified repositories' latest_versions."
                    },
                    "keep_days": {
                        "type": "integer",
                        "format": "int64",
                        "default": 14,
                        "description": "Prune packages introduced *prior-to* this many days ago. Default is 14. A value of 0 implies 'keep latest package only.'",
                        "minimum": 0
                    },
                    "dry_run": {
                        "type": "boolean",
                        "default": false,
                        "description": "Determine what would-be-pruned and log the list of packages. Intended as a debugging aid."
                    }
                },
                "required": [
                    "repo_hrefs"
                ]
            },
            "Repair": {
                "type": "object",
                "properties": {
                    "verify_checksums": {
                        "type": "boolean",
                        "default": true,
                        "description": "Will verify that the checksum of all stored files matches what saved in the database. Otherwise only the existence of the files will be checked. Enabled by default"
                    }
                }
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "RpmRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for RPM Sync.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "description": "DEPRECATED: If ``True``, ``sync_policy`` will default to 'mirror_complete' instead of 'additive'."
                    },
                    "sync_policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SyncPolicyEnum"
                            }
                        ],
                        "description": "Options: 'additive', 'mirror_complete', 'mirror_content_only'. Default: 'additive'. Modifies how the sync is performed. 'mirror_complete' will clone the original metadata and create an automatic publication from it, but comes with some limitations and does not work for certain repositories. 'mirror_content_only' will change the repository contents to match the remote but the metadata will be regenerated and will not be bit-for-bit identical. 'additive' will retain the existing contents of the repository and add the contents of the repository being synced.\n\n* `additive` - additive\n* `mirror_complete` - mirror_complete\n* `mirror_content_only` - mirror_content_only"
                    },
                    "skip_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkipTypesEnum"
                        },
                        "default": [],
                        "description": "List of content types to skip during sync."
                    },
                    "optimize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether or not to optimize sync."
                    }
                }
            },
            "SetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SkipTypesEnum": {
                "enum": [
                    "srpm",
                    "treeinfo"
                ],
                "type": "string",
                "description": "* `srpm` - srpm\n* `treeinfo` - treeinfo"
            },
            "SyncPolicyEnum": {
                "enum": [
                    "additive",
                    "mirror_complete",
                    "mirror_content_only"
                ],
                "type": "string",
                "description": "* `additive` - additive\n* `mirror_complete` - mirror_complete\n* `mirror_content_only` - mirror_content_only"
            },
            "TaskGroupOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations that return a task group.",
                "properties": {
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task group."
                    }
                },
                "required": [
                    "task_group"
                ]
            },
            "UnsetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "UnsetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            },
            "VariantResponse": {
                "type": "object",
                "description": "Variant serializer.",
                "properties": {
                    "variant_id": {
                        "type": "string",
                        "description": "Variant id."
                    },
                    "uid": {
                        "type": "string",
                        "description": "Variant uid."
                    },
                    "name": {
                        "type": "string",
                        "description": "Variant name."
                    },
                    "type": {
                        "type": "string",
                        "description": "Variant type."
                    },
                    "packages": {
                        "type": "string",
                        "description": "Relative path to directory with binary RPMs."
                    },
                    "source_packages": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to directory with source RPMs."
                    },
                    "source_repository": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to YUM repository with source RPMs."
                    },
                    "debug_packages": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to directory with debug RPMs."
                    },
                    "debug_repository": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to YUM repository with debug RPMs."
                    },
                    "identity": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to a pem file that identifies a product."
                    }
                },
                "required": [
                    "debug_packages",
                    "debug_repository",
                    "identity",
                    "name",
                    "packages",
                    "source_packages",
                    "source_repository",
                    "type",
                    "uid",
                    "variant_id"
                ]
            },
            "rpm.DistributionTreeResponse": {
                "type": "object",
                "description": "DistributionTree serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "header_version": {
                        "type": "string",
                        "description": "Header Version."
                    },
                    "release_name": {
                        "type": "string",
                        "description": "Release name."
                    },
                    "release_short": {
                        "type": "string",
                        "description": "Release short name."
                    },
                    "release_version": {
                        "type": "string",
                        "description": "Release version."
                    },
                    "release_is_layered": {
                        "type": "boolean",
                        "description": "Typically False for an operating system, True otherwise."
                    },
                    "base_product_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Base Product name."
                    },
                    "base_product_short": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Base Product short name."
                    },
                    "base_product_version": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Base Product version."
                    },
                    "arch": {
                        "type": "string",
                        "description": "Tree architecturerch."
                    },
                    "build_timestamp": {
                        "type": "number",
                        "format": "double",
                        "description": "Tree build time timestamp."
                    },
                    "instimage": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to Anaconda instimage."
                    },
                    "mainimage": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Relative path to Anaconda stage2 image."
                    },
                    "discnum": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Disc number."
                    },
                    "totaldiscs": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Number of discs in media set."
                    },
                    "addons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddonResponse"
                        }
                    },
                    "checksums": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChecksumResponse"
                        }
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImageResponse"
                        }
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VariantResponse"
                        }
                    }
                },
                "required": [
                    "addons",
                    "arch",
                    "base_product_name",
                    "base_product_short",
                    "base_product_version",
                    "build_timestamp",
                    "checksums",
                    "discnum",
                    "header_version",
                    "images",
                    "instimage",
                    "mainimage",
                    "release_is_layered",
                    "release_name",
                    "release_short",
                    "release_version",
                    "totaldiscs",
                    "variants"
                ]
            },
            "rpm.Modulemd": {
                "type": "object",
                "description": "Modulemd serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Stream name."
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd version."
                    },
                    "static_context": {
                        "type": "boolean",
                        "description": "Modulemd static-context flag."
                    },
                    "context": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd context."
                    },
                    "arch": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd architecture."
                    },
                    "artifacts": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd artifacts."
                    },
                    "dependencies": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd dependencies."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "format": "uri"
                        },
                        "description": "Modulemd artifacts' packages."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Modulemd snippet"
                    },
                    "profiles": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd profiles."
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Description of module."
                    }
                },
                "required": [
                    "arch",
                    "artifacts",
                    "context",
                    "dependencies",
                    "description",
                    "name",
                    "profiles",
                    "snippet",
                    "stream",
                    "version"
                ]
            },
            "rpm.ModulemdDefaults": {
                "type": "object",
                "description": "ModulemdDefaults serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "module": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd default stream."
                    },
                    "profiles": {
                        "description": "Default profiles for modulemd streams."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Modulemd default snippet"
                    }
                },
                "required": [
                    "module",
                    "profiles",
                    "snippet",
                    "stream"
                ]
            },
            "rpm.ModulemdDefaultsResponse": {
                "type": "object",
                "description": "ModulemdDefaults serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "module": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "description": "Modulemd default stream."
                    },
                    "profiles": {
                        "description": "Default profiles for modulemd streams."
                    }
                },
                "required": [
                    "module",
                    "profiles",
                    "stream"
                ]
            },
            "rpm.ModulemdObsolete": {
                "type": "object",
                "description": "ModulemdObsolete serializer.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "modified": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Obsolete modified time."
                    },
                    "module_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd name."
                    },
                    "module_stream": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Modulemd's stream."
                    },
                    "message": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Obsolete description."
                    },
                    "override_previous": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Reset previous obsoletes."
                    },
                    "module_context": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Modulemd's context."
                    },
                    "eol_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "End of Life date."
                    },
                    "obsoleted_by_module_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Obsolete by module name."
                    },
                    "obsoleted_by_module_stream": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Obsolete by module stream."
                    },
                    "snippet": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Module Obsolete snippet."
                    }
                },
                "required": [
                    "eol_date",
                    "message",
                    "modified",
                    "module_context",
                    "module_name",
                    "module_stream",
                    "obsoleted_by_module_name",
                    "obsoleted_by_module_stream",
                    "override_previous",
                    "snippet"
                ]
            },
            "rpm.ModulemdObsoleteResponse": {
                "type": "object",
                "description": "ModulemdObsolete serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "modified": {
                        "type": "string",
                        "description": "Obsolete modified time."
                    },
                    "module_name": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "module_stream": {
                        "type": "string",
                        "description": "Modulemd's stream."
                    },
                    "message": {
                        "type": "string",
                        "description": "Obsolete description."
                    },
                    "override_previous": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Reset previous obsoletes."
                    },
                    "module_context": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Modulemd's context."
                    },
                    "eol_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "End of Life date."
                    },
                    "obsoleted_by_module_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Obsolete by module name."
                    },
                    "obsoleted_by_module_stream": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Obsolete by module stream."
                    }
                },
                "required": [
                    "eol_date",
                    "message",
                    "modified",
                    "module_context",
                    "module_name",
                    "module_stream",
                    "obsoleted_by_module_name",
                    "obsoleted_by_module_stream",
                    "override_previous"
                ]
            },
            "rpm.ModulemdResponse": {
                "type": "object",
                "description": "Modulemd serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Modulemd name."
                    },
                    "stream": {
                        "type": "string",
                        "description": "Stream name."
                    },
                    "version": {
                        "type": "string",
                        "description": "Modulemd version."
                    },
                    "static_context": {
                        "type": "boolean",
                        "description": "Modulemd static-context flag."
                    },
                    "context": {
                        "type": "string",
                        "description": "Modulemd context."
                    },
                    "arch": {
                        "type": "string",
                        "description": "Modulemd architecture."
                    },
                    "artifacts": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd artifacts."
                    },
                    "dependencies": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd dependencies."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "format": "uri"
                        },
                        "description": "Modulemd artifacts' packages."
                    },
                    "profiles": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Modulemd profiles."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of module."
                    }
                },
                "required": [
                    "arch",
                    "artifacts",
                    "context",
                    "dependencies",
                    "description",
                    "name",
                    "profiles",
                    "stream",
                    "version"
                ]
            },
            "rpm.Package": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and add those fields to the Meta class\nkeeping fields from the parent class as well. Provide help_text.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "file_url": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A url that Pulp can download and turn into the content unit."
                    }
                }
            },
            "rpm.PackageCategoryResponse": {
                "type": "object",
                "description": "PackageCategory serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "Category id."
                    },
                    "name": {
                        "type": "string",
                        "description": "Category name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Category description."
                    },
                    "display_order": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Category display order."
                    },
                    "group_ids": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Category group list."
                    },
                    "desc_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Category description by language."
                    },
                    "name_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Category name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "Category digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "group_ids",
                    "id",
                    "name",
                    "name_by_lang"
                ]
            },
            "rpm.PackageEnvironmentResponse": {
                "type": "object",
                "description": "PackageEnvironment serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "Environment id."
                    },
                    "name": {
                        "type": "string",
                        "description": "Environment name."
                    },
                    "description": {
                        "type": "string",
                        "description": "Environment description."
                    },
                    "display_order": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Environment display order."
                    },
                    "group_ids": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Environment group list."
                    },
                    "option_ids": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Environment option ids"
                    },
                    "desc_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Environment description by language."
                    },
                    "name_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Environment name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "Environment digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "group_ids",
                    "id",
                    "name",
                    "name_by_lang",
                    "option_ids"
                ]
            },
            "rpm.PackageGroupResponse": {
                "type": "object",
                "description": "PackageGroup serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "description": "PackageGroup id."
                    },
                    "default": {
                        "type": "boolean",
                        "description": "PackageGroup default."
                    },
                    "user_visible": {
                        "type": "boolean",
                        "description": "PackageGroup user visibility."
                    },
                    "display_order": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "PackageGroup display order."
                    },
                    "name": {
                        "type": "string",
                        "description": "PackageGroup name."
                    },
                    "description": {
                        "type": "string",
                        "description": "PackageGroup description."
                    },
                    "packages": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "PackageGroup package list."
                    },
                    "biarch_only": {
                        "type": "boolean",
                        "description": "PackageGroup biarch only."
                    },
                    "desc_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "PackageGroup description by language."
                    },
                    "name_by_lang": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "PackageGroup name by language."
                    },
                    "digest": {
                        "type": "string",
                        "description": "PackageGroup digest."
                    }
                },
                "required": [
                    "desc_by_lang",
                    "description",
                    "digest",
                    "display_order",
                    "id",
                    "name",
                    "name_by_lang",
                    "packages"
                ]
            },
            "rpm.PackageLangpacksResponse": {
                "type": "object",
                "description": "PackageLangpacks serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "matches": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Langpacks matches."
                    },
                    "digest": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Langpacks digest."
                    }
                },
                "required": [
                    "digest",
                    "matches"
                ]
            },
            "rpm.PackageResponse": {
                "type": "object",
                "description": "A Serializer for Package.\n\nAdd serializers for the new fields defined in Package and add those fields to the Meta class\nkeeping fields from the parent class as well. Provide help_text.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the package"
                    },
                    "epoch": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The package's epoch"
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the package. For example, '2.8.0'"
                    },
                    "release": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The release of a particular version of the package. e.g. '1.el7' or '3.f24'"
                    },
                    "arch": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The target architecture for a package.For example, 'x86_64', 'i686', or 'noarch'"
                    },
                    "pkgId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Checksum of the package file"
                    },
                    "checksum_type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Type of checksum, e.g. 'sha256', 'md5'"
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Short description of the packaged software"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "In-depth description of the packaged software"
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "URL with more information about the packaged software"
                    },
                    "changelogs": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Changelogs that package contains"
                    },
                    "files": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Files that package contains"
                    },
                    "requires": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package requires"
                    },
                    "provides": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package provides"
                    },
                    "conflicts": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package conflicts"
                    },
                    "obsoletes": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package obsoletes"
                    },
                    "suggests": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package suggests"
                    },
                    "enhances": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package enhances"
                    },
                    "recommends": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package recommends"
                    },
                    "supplements": {
                        "readOnly": true,
                        "default": "[]",
                        "description": "Capabilities the package supplements"
                    },
                    "location_base": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Base location of this package"
                    },
                    "location_href": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Relative location of package to the repodata"
                    },
                    "rpm_buildhost": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Hostname of the system that built the package"
                    },
                    "rpm_group": {
                        "type": "string",
                        "readOnly": true,
                        "description": "RPM group (See: http://fedoraproject.org/wiki/RPMGroups)"
                    },
                    "rpm_license": {
                        "type": "string",
                        "readOnly": true,
                        "description": "License term applicable to the package software (GPLv2, etc.)"
                    },
                    "rpm_packager": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Person or persons responsible for creating the package"
                    },
                    "rpm_sourcerpm": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the source package (srpm) the package was built from"
                    },
                    "rpm_vendor": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the organization that produced the package"
                    },
                    "rpm_header_start": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "First byte of the header"
                    },
                    "rpm_header_end": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Last byte of the header"
                    },
                    "is_modular": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Flag to identify if the package is modular"
                    },
                    "size_archive": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Size, in bytes, of the archive portion of the original package file"
                    },
                    "size_installed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Total size, in bytes, of every file installed by this package"
                    },
                    "size_package": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Size, in bytes, of the package"
                    },
                    "time_build": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Time the package was built in seconds since the epoch"
                    },
                    "time_file": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The 'file' time attribute in the primary XML - file mtime in seconds since the epoch."
                    }
                }
            },
            "rpm.RepoMetadataFileResponse": {
                "type": "object",
                "description": "RepoMetadataFile serializer.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Relative path of the file."
                    },
                    "data_type": {
                        "type": "string",
                        "description": "Metadata type."
                    },
                    "checksum_type": {
                        "type": "string",
                        "description": "Checksum type for the file."
                    },
                    "checksum": {
                        "type": "string",
                        "description": "Checksum for the file."
                    }
                },
                "required": [
                    "checksum",
                    "checksum_type",
                    "data_type",
                    "relative_path"
                ]
            },
            "rpm.RpmAlternateContentSource": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "rpm.RpmAlternateContentSourceResponse": {
                "type": "object",
                "description": "Serializer for RPM alternate content source.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Alternate Content Source."
                    },
                    "last_refreshed": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "description": "Date of last refresh of AlternateContentSource."
                    },
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of paths that will be appended to the Remote url when searching for content."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "The remote to provide alternate content source."
                    }
                },
                "required": [
                    "name",
                    "remote"
                ]
            },
            "rpm.RpmDistribution": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "rpm.RpmDistributionResponse": {
                "type": "object",
                "description": "Serializer for RPM Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional content-guard."
                    },
                    "no_content_change_since": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "publication": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "Publication to be served"
                    },
                    "generate_repo_config": {
                        "type": "boolean",
                        "default": false,
                        "description": "An option specifying whether Pulp should generate *.repo files."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "rpm.RpmPublication": {
                "type": "object",
                "description": "A Serializer for RpmPublication.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type used during repo publishes.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for metadata.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for packages.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages."
                    },
                    "repo_gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata."
                    },
                    "repo_config": {
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "rpm.RpmPublicationResponse": {
                "type": "object",
                "description": "A Serializer for RpmPublication.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type used during repo publishes.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for metadata.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: The checksum type for packages.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages."
                    },
                    "repo_gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata."
                    },
                    "sqlite_metadata": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false,
                        "description": "REMOVED: An option specifying whether Pulp should generate SQLite metadata. Not operation since pulp_rpm 3.25.0 release"
                    },
                    "repo_config": {
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                }
            },
            "rpm.RpmRemote": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "sles_auth_token": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Authentication token for SLES repositories."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.RpmRemoteResponse": {
                "type": "object",
                "description": "A Serializer for RpmRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "sles_auth_token": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Authentication token for SLES repositories."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.RpmRepository": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Retain X versions of the repository. Default is null which retains all versions."
                    },
                    "remote": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated signing service."
                    },
                    "package_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated package signing service."
                    },
                    "package_signing_fingerprint": {
                        "type": "string",
                        "default": "",
                        "description": "The pubkey V4 fingerprint (160 bits) to be passed to the package signing service.The signing service will use that on signing operations related to this repository.",
                        "maxLength": 40
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages."
                    },
                    "repo_gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata."
                    },
                    "repo_config": {
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "rpm.RpmRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Rpm Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Retain X versions of the repository. Default is null which retains all versions."
                    },
                    "remote": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "An optional remote to use by default when syncing."
                    },
                    "autopublish": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to automatically create publications for new repository versions, and update any distributions pointing to this repository."
                    },
                    "metadata_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated signing service."
                    },
                    "package_signing_service": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri",
                        "description": "A reference to an associated package signing service."
                    },
                    "package_signing_fingerprint": {
                        "type": "string",
                        "default": "",
                        "description": "The pubkey V4 fingerprint (160 bits) to be passed to the package signing service.The signing service will use that on signing operations related to this repository.",
                        "maxLength": 40
                    },
                    "retain_package_versions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The number of versions of each package to keep in the repository; older versions will be purged. The default is '0', which will disable this feature and keep all versions of each package.",
                        "minimum": 0
                    },
                    "checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "The preferred checksum type during repo publish.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "metadata_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "package_checksum_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageChecksumTypeEnum"
                            }
                        ],
                        "description": "DEPRECATED: use CHECKSUM_TYPE instead.\n\n* `unknown` - unknown\n* `md5` - md5\n* `sha1` - sha1\n* `sha224` - sha224\n* `sha256` - sha256\n* `sha384` - sha384\n* `sha512` - sha512"
                    },
                    "gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on packages."
                    },
                    "repo_gpgcheck": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "DEPRECATED: An option specifying whether a client should perform a GPG signature check on the repodata."
                    },
                    "sqlite_metadata": {
                        "type": "boolean",
                        "readOnly": true,
                        "default": false,
                        "description": "REMOVED: An option specifying whether Pulp should generate SQLite metadata. Not operation since pulp_rpm 3.25.0 release"
                    },
                    "repo_config": {
                        "description": "A JSON document describing config.repo file"
                    },
                    "compression_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompressionTypeEnum"
                            }
                        ],
                        "description": "The compression type to use for metadata files.\n\n* `zstd` - zstd\n* `gz` - gz"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "rpm.UlnRemote": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account username."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Your ULN account password."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "uln_server_base_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "minLength": 1,
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                },
                "required": [
                    "name",
                    "password",
                    "url",
                    "username"
                ]
            },
            "rpm.UlnRemoteResponse": {
                "type": "object",
                "description": "A Serializer for UlnRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The ULN repo URL of the remote content source.\"This is \"uln://\" followed by the channel name. E.g.: \"uln://ol7_x86_64_oracle\""
                    },
                    "ca_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    "download_concurrency": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Total number of simultaneous connections. If not set then the default value will be used."
                    },
                    "max_retries": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "format": "double",
                        "minimum": 0.0,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64",
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "uln_server_base_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Base URL of the ULN server. If the uln_server_base_url is not provided pulp_rpm willuse the contents of the DEFAULT_ULN_SERVER_BASE_URL setting instead."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "rpm.UpdateCollection": {
                "type": "object",
                "description": "A Serializer for UpdateCollection.",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Collection name."
                    },
                    "shortname": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Collection short name."
                    },
                    "module": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Collection modular NSVCA."
                    }
                },
                "required": [
                    "module",
                    "name",
                    "shortname"
                ]
            },
            "rpm.UpdateCollectionResponse": {
                "type": "object",
                "description": "A Serializer for UpdateCollection.",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Collection name."
                    },
                    "shortname": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Collection short name."
                    },
                    "module": {
                        "oneOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Collection modular NSVCA."
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of packages"
                    }
                },
                "required": [
                    "module",
                    "name",
                    "shortname"
                ]
            },
            "rpm.UpdateRecord": {
                "type": "object",
                "description": "A Serializer for UpdateRecord.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "file_url": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A url that Pulp can download and turn into the content unit."
                    }
                }
            },
            "rpm.UpdateRecordResponse": {
                "type": "object",
                "description": "A Serializer for UpdateRecord.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update id (short update name, e.g. RHEA-2013:1777)"
                    },
                    "updated_date": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Date when the update was updated (e.g. '2013-12-02 00:00:00')"
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update description"
                    },
                    "issued_date": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Date when the update was issued (e.g. '2013-12-02 00:00:00')"
                    },
                    "fromstr": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Source of the update (e.g. security@redhat.com)"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update status ('final', ...)"
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update name"
                    },
                    "summary": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Short summary"
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update version (probably always an integer number)"
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update type ('enhancement', 'bugfix', ...)"
                    },
                    "severity": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Severity"
                    },
                    "solution": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Solution"
                    },
                    "release": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Update release"
                    },
                    "rights": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Copyrights"
                    },
                    "pushcount": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Push count"
                    },
                    "pkglist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/rpm.UpdateCollectionResponse"
                        },
                        "readOnly": true,
                        "description": "List of packages"
                    },
                    "references": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "readOnly": true,
                        "description": "List of references"
                    },
                    "reboot_suggested": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Reboot suggested"
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}