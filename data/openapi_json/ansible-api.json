{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulpproject.org/pulp-docs/docs/assets/pulp_logo_icon.svg"
        },
        "x-pulp-app-versions": {
            "ansible": "0.26.0.dev",
            "core": "3.79.0"
        },
        "x-pulp-domain-enabled": false
    },
    "paths": {
        "/ansible/collections/": {
            "post": {
                "operationId": "upload_collection",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/ansible/collections/": {
            "get": {
                "operationId": "ansible_collections_list",
                "description": "Viewset for Ansible Collections.",
                "summary": "List collections",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}": {
            "get": {
                "operationId": "ansible_collections_read",
                "description": "Viewset for Ansible Collections.",
                "summary": "Inspect a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}add_role/": {
            "post": {
                "operationId": "ansible_collections_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}list_roles/": {
            "get": {
                "operationId": "ansible_collections_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}my_permissions/": {
            "get": {
                "operationId": "ansible_collections_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}remove_role/": {
            "post": {
                "operationId": "ansible_collections_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/ansible/copy/": {
            "post": {
                "operationId": "copy_content",
                "description": "Trigger an asynchronous task to copy ansible content from one repository into another, creating a new repository version.",
                "summary": "Copy content",
                "tags": [
                    "Ansible: Copy"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Copy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/collection_deprecations/": {
            "get": {
                "operationId": "content_ansible_collection_deprecations_list",
                "description": "ViewSet for AnsibleCollectionDeprecated.",
                "summary": "List ansible collection deprecateds",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleCollectionDeprecatedResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_deprecations_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an ansible collection deprecated",
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecated"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_collection_deprecated_href}": {
            "get": {
                "operationId": "content_ansible_collection_deprecations_read",
                "description": "ViewSet for AnsibleCollectionDeprecated.",
                "summary": "Inspect an ansible collection deprecated",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_collection_deprecated_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecatedResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_collection_deprecated_href}set_label/": {
            "post": {
                "operationId": "content_ansible_collection_deprecations_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_collection_deprecated_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_collection_deprecated_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_collection_deprecations_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_collection_deprecated_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Deprecations"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/collection_marks/": {
            "get": {
                "operationId": "content_ansible_collection_marks_list",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "List collection version marks",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "marked_collection",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter marks for collection version"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-value",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "value"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `value` - Value\n* `-value` - Value (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter marks by value"
                    },
                    {
                        "in": "query",
                        "name": "value__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where value is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionMarkResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_marks_create",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "Create a collection version mark",
                "tags": [
                    "Content: Collection_Marks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_mark_href}": {
            "get": {
                "operationId": "content_ansible_collection_marks_read",
                "description": "ViewSet for looking at mark objects for CollectionVersion content.",
                "summary": "Inspect a collection version mark",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_mark_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_mark_href}set_label/": {
            "post": {
                "operationId": "content_ansible_collection_marks_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_mark_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_mark_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_collection_marks_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_mark_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Marks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/collection_signatures/": {
            "get": {
                "operationId": "content_ansible_collection_signatures_list",
                "description": "ViewSet for looking at signature objects for CollectionVersion content.",
                "summary": "List collection version signatures",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-data",
                                    "-digest",
                                    "-pk",
                                    "-pubkey_fingerprint",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "data",
                                    "digest",
                                    "pk",
                                    "pubkey_fingerprint",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `data` - Data\n* `-data` - Data (descending)\n* `digest` - Digest\n* `-digest` - Digest (descending)\n* `pubkey_fingerprint` - Pubkey fingerprint\n* `-pubkey_fingerprint` - Pubkey fingerprint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pubkey_fingerprint",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where pubkey_fingerprint matches value"
                    },
                    {
                        "in": "query",
                        "name": "pubkey_fingerprint__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where pubkey_fingerprint is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "signed_collection",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter signatures for collection version"
                    },
                    {
                        "in": "query",
                        "name": "signing_service",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter signatures produced by signature service"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionSignatureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_signatures_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a collection version signature",
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionSignature"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersionSignature"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_signature_href}": {
            "get": {
                "operationId": "content_ansible_collection_signatures_read",
                "description": "ViewSet for looking at signature objects for CollectionVersion content.",
                "summary": "Inspect a collection version signature",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionSignatureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_signature_href}set_label/": {
            "post": {
                "operationId": "content_ansible_collection_signatures_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_signature_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_collection_signatures_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Signatures"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/collection_versions/": {
            "get": {
                "operationId": "content_ansible_collection_versions_list",
                "description": "ViewSet for Ansible Collection.",
                "summary": "List collection versions",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_versions_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create a collection version",
                "tags": [
                    "Content: Collection_Versions"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}": {
            "get": {
                "operationId": "content_ansible_collection_versions_read",
                "description": "ViewSet for Ansible Collection.",
                "summary": "Inspect a collection version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}set_label/": {
            "post": {
                "operationId": "content_ansible_collection_versions_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_collection_versions_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/namespaces/": {
            "get": {
                "operationId": "content_ansible_namespaces_list",
                "description": "ViewSet for AnsibleNamespace.",
                "summary": "List ansible namespace metadatas",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}": {
            "get": {
                "operationId": "content_ansible_namespaces_read",
                "description": "ViewSet for AnsibleNamespace.",
                "summary": "Inspect an ansible namespace metadata",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}avatar/": {
            "get": {
                "operationId": "content_ansible_namespaces_avatar",
                "description": "Get the logo for the this namespace.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "302": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Unspecified response body"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}set_label/": {
            "post": {
                "operationId": "content_ansible_namespaces_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_namespace_metadata_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_namespaces_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_namespace_metadata_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/roles/": {
            "get": {
                "operationId": "content_ansible_roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where namespace matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Content: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}": {
            "get": {
                "operationId": "content_ansible_roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}set_label/": {
            "post": {
                "operationId": "content_ansible_roles_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}unset_label/": {
            "post": {
                "operationId": "content_ansible_roles_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/ansible/ansible/": {
            "get": {
                "operationId": "distributions_ansible_ansible_list",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "List ansible distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "checkpoint",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where checkpoint matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-checkpoint",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "checkpoint",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `checkpoint` - Checkpoint\n* `-checkpoint` - Checkpoint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_ansible_ansible_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create an ansible distribution",
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}": {
            "get": {
                "operationId": "distributions_ansible_ansible_read",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "Inspect an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}add_role/": {
            "post": {
                "operationId": "distributions_ansible_ansible_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}list_roles/": {
            "get": {
                "operationId": "distributions_ansible_ansible_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}my_permissions/": {
            "get": {
                "operationId": "distributions_ansible_ansible_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}remove_role/": {
            "post": {
                "operationId": "distributions_ansible_ansible_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_ansible_ansible_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_ansible_ansible_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/pulp_ansible/tags/": {
            "get": {
                "operationId": "pulp_ansible_tags_list",
                "description": "ViewSet for Tag models.",
                "summary": "List tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Tags"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/ansible/collection/": {
            "get": {
                "operationId": "remotes_ansible_collection_list",
                "description": "ViewSet for Collection Remotes.",
                "summary": "List collection remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-auth_url",
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-requirements_file",
                                    "-signed_only",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-sync_dependencies",
                                    "-tls_validation",
                                    "-token",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "auth_url",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "requirements_file",
                                    "signed_only",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "sync_dependencies",
                                    "tls_validation",
                                    "token",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `requirements_file` - Requirements file\n* `-requirements_file` - Requirements file (descending)\n* `auth_url` - Auth url\n* `-auth_url` - Auth url (descending)\n* `token` - Token\n* `-token` - Token (descending)\n* `sync_dependencies` - Sync dependencies\n* `-sync_dependencies` - Sync dependencies (descending)\n* `signed_only` - Signed only\n* `-signed_only` - Signed only (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "url",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url matches value"
                    },
                    {
                        "in": "query",
                        "name": "url__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url contains value"
                    },
                    {
                        "in": "query",
                        "name": "url__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where url contains value"
                    },
                    {
                        "in": "query",
                        "name": "url__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where url is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_collection_create",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Create a collection remote",
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_collection_read",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Inspect a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_collection_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_collection_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_collection_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_collection_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_collection_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_collection_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_collection_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_collection_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_collection_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/ansible/git/": {
            "get": {
                "operationId": "remotes_ansible_git_list",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "List git remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.GitRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_git_create",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "Create a git remote",
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_git_read",
                "description": "ViewSet for Ansible Remotes.\n\nThis is a tech preview feature. The functionality may change in the future.",
                "summary": "Inspect a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_git_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_git_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.GitRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_git_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a git remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_git_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_git_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_git_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_git_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_git_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_git_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_git_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_git_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Git"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/ansible/role/": {
            "get": {
                "operationId": "remotes_ansible_role_list",
                "description": "ViewSet for Role Remotes.",
                "summary": "List role remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_role_create",
                "description": "ViewSet for Role Remotes.",
                "summary": "Create a role remote",
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_role_read",
                "description": "ViewSet for Role Remotes.",
                "summary": "Inspect a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_role_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_role_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_role_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}add_role/": {
            "post": {
                "operationId": "remotes_ansible_role_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}list_roles/": {
            "get": {
                "operationId": "remotes_ansible_role_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}my_permissions/": {
            "get": {
                "operationId": "remotes_ansible_role_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}remove_role/": {
            "post": {
                "operationId": "remotes_ansible_role_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}set_label/": {
            "post": {
                "operationId": "remotes_ansible_role_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}unset_label/": {
            "post": {
                "operationId": "remotes_ansible_role_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/ansible/ansible/": {
            "get": {
                "operationId": "repositories_ansible_ansible_list",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "List ansible repositorys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_ansible_ansible_create",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Create an ansible repository",
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_read",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Inspect an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}add_role/": {
            "post": {
                "operationId": "repositories_ansible_ansible_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}copy_collection_version/": {
            "post": {
                "operationId": "repositories_ansible_ansible_copy_collection_version",
                "description": "Trigger an asynchronous task to copy collection versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}list_roles/": {
            "get": {
                "operationId": "repositories_ansible_ansible_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}mark/": {
            "post": {
                "operationId": "repositories_ansible_ansible_mark",
                "description": "Trigger an asynchronous task to mark Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}modify/": {
            "post": {
                "operationId": "repositories_ansible_ansible_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}move_collection_version/": {
            "post": {
                "operationId": "repositories_ansible_ansible_move_collection_version",
                "description": "Trigger an asynchronous task to move collection versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionCopyMove"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}my_permissions/": {
            "get": {
                "operationId": "repositories_ansible_ansible_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}rebuild_metadata/": {
            "post": {
                "operationId": "repositories_ansible_ansible_rebuild_metadata",
                "description": "Trigger an asynchronous task to rebuild Ansible content meta.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}remove_role/": {
            "post": {
                "operationId": "repositories_ansible_ansible_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}set_label/": {
            "post": {
                "operationId": "repositories_ansible_ansible_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}sign/": {
            "post": {
                "operationId": "repositories_ansible_ansible_sign",
                "description": "Trigger an asynchronous task to sign Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySignature"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}sync/": {
            "post": {
                "operationId": "repositories_ansible_ansible_sync",
                "description": "Trigger an asynchronous task to sync Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}unmark/": {
            "post": {
                "operationId": "repositories_ansible_ansible_unmark",
                "description": "Trigger an asynchronous task to unmark Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryMark"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}unset_label/": {
            "post": {
                "operationId": "repositories_ansible_ansible_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}versions/": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_list",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_read",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_versions_delete",
                "description": "Trigger an asynchronous task to delete a repository version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}rebuild_metadata/": {
            "post": {
                "operationId": "repositories_ansible_ansible_versions_rebuild_metadata",
                "description": "Trigger an asynchronous task to rebuild Ansible content meta.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnsibleRepositoryRebuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_ansible_ansible_versions_repair",
                "description": "Trigger an asynchronous task to repair a repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_get",
                "description": "Return a response to the \"GET\" action.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{ansible_role_href}api/v1/roles/": {
            "get": {
                "operationId": "api_v1_roles_get",
                "description": "APIView for Roles.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Roles"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}versions/": {
            "get": {
                "operationId": "api_v1_roles_versions_list",
                "description": "APIView for Role Versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collection_versions/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collection_versions_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Collections All"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{ansible_collection_import_href}": {
            "get": {
                "operationId": "collection_import_read",
                "description": "Returns a CollectionImport object.",
                "summary": "Inspect a collection import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "since",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter messages since a given timestamp"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Collection: Import"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionImportDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_namespaces_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_namespaces_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_artifacts_download",
                "description": "Collection download endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_api_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_cross_repository_collection_version_index_href}api/v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "api_v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Plugin Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_cross_repository_collection_version_index_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Plugin Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_get",
                "description": "Return a response to the \"GET\" action.",
                "tags": [
                    "Pulp_Ansible: Default Api"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_read",
                "description": "Legacy v3 endpoint.",
                "tags": [
                    "Pulp_Ansible: Default Api V3"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/artifacts/collections/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/artifacts/collections/{path}/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_artifacts_collections_get",
                "description": "Download collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Artifacts Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collection_versions/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collection_versions_all_list",
                "description": "Legacy v3 endpoint.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collection_Versions All"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_update",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_delete",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_versions_docs_blob_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections Versions Docs-Blob"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/collections/all/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_collections_all_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Collections All"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_namespaces_list",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_namespaces_read",
                "description": "Legacy v3 endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "deprecated": true,
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "302": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/client-configuration/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_client_configuration_read",
                "description": "Return configurations for the ansible-galaxy client.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Client-Configuration"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_read",
                "description": "ViewSet for Repository Metadata.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepoMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_all_collections_list",
                "description": "Unpaginated ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections All-Collections"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CollectionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/all-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_all_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections All-Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UnpaginatedCollectionVersionResponse"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_artifacts_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Artifacts Collections V3"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/artifacts/{filename}": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_artifacts_download",
                "description": "Collection download endpoint.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "filename",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCollection"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-authors",
                                    "-contents",
                                    "-dependencies",
                                    "-description",
                                    "-docs_blob",
                                    "-documentation",
                                    "-files",
                                    "-homepage",
                                    "-issues",
                                    "-license",
                                    "-manifest",
                                    "-name",
                                    "-namespace",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-repository",
                                    "-requires_ansible",
                                    "-search_vector",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-version",
                                    "-version_major",
                                    "-version_minor",
                                    "-version_patch",
                                    "-version_prerelease",
                                    "authors",
                                    "contents",
                                    "dependencies",
                                    "description",
                                    "docs_blob",
                                    "documentation",
                                    "files",
                                    "homepage",
                                    "issues",
                                    "license",
                                    "manifest",
                                    "name",
                                    "namespace",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "repository",
                                    "requires_ansible",
                                    "search_vector",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "version",
                                    "version_major",
                                    "version_minor",
                                    "version_patch",
                                    "version_prerelease"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `authors` - Authors\n* `-authors` - Authors (descending)\n* `contents` - Contents\n* `-contents` - Contents (descending)\n* `dependencies` - Dependencies\n* `-dependencies` - Dependencies (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `docs_blob` - Docs blob\n* `-docs_blob` - Docs blob (descending)\n* `manifest` - Manifest\n* `-manifest` - Manifest (descending)\n* `files` - Files\n* `-files` - Files (descending)\n* `documentation` - Documentation\n* `-documentation` - Documentation (descending)\n* `homepage` - Homepage\n* `-homepage` - Homepage (descending)\n* `issues` - Issues\n* `-issues` - Issues (descending)\n* `license` - License\n* `-license` - License (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `namespace` - Namespace\n* `-namespace` - Namespace (descending)\n* `repository` - Repository\n* `-repository` - Repository (descending)\n* `requires_ansible` - Requires ansible\n* `-requires_ansible` - Requires ansible (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `version` - Version\n* `-version` - Version (descending)\n* `version_major` - Version major\n* `-version_major` - Version major (descending)\n* `version_minor` - Version minor\n* `-version_minor` - Version minor (descending)\n* `version_patch` - Version patch\n* `-version_patch` - Version patch (descending)\n* `version_prerelease` - Version prerelease\n* `-version_prerelease` - Version prerelease (descending)\n* `search_vector` - Search vector\n* `-search_vector` - Search vector (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where version matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/collections/index/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_collections_index_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Collections Index Versions Docs-Blob"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_list",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "company",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company contains value"
                    },
                    {
                        "in": "query",
                        "name": "company__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches value"
                    },
                    {
                        "in": "query",
                        "name": "company__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where company is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "company__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "query",
                        "name": "company__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "company__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where company starts with value"
                    },
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where metadata_sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "metadata_sha256__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where metadata_sha256 is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-avatar_sha256",
                                    "-company",
                                    "-description",
                                    "-email",
                                    "-links",
                                    "-metadata_sha256",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-resources",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "avatar_sha256",
                                    "company",
                                    "description",
                                    "email",
                                    "links",
                                    "metadata_sha256",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "resources",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `company` - Company\n* `-company` - Company (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `resources` - Resources\n* `-resources` - Resources (descending)\n* `links` - Links\n* `-links` - Links (descending)\n* `avatar_sha256` - Avatar sha256\n* `-avatar_sha256` - Avatar sha256 (descending)\n* `metadata_sha256` - Metadata sha256\n* `-metadata_sha256` - Metadata sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleNamespaceMetadataResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_create",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/content/{distro_base_path}/namespaces/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_read",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_partial_update",
                "description": "Provides the authentication and permission classes from settings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleNamespaceMetadata"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_content_namespaces_delete",
                "description": "Try to remove the Namespace if no Collections under Namespace are present.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "distro_base_path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Content Namespaces"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/default/api/v3/plugin/ansible/search/collection-versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_search_collection_versions_list",
                "description": "A viewset for cross-repo searches.",
                "summary": "List cross repository collection version indexs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "dependency",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "distribution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these distrubtion ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "distribution_base_path",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these base paths.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_deprecated",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_highest",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "keywords",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "order_by",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-namespace",
                                    "-pulp_created",
                                    "-version",
                                    "name",
                                    "namespace",
                                    "pulp_created",
                                    "version"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_created` - by CV created\n* `-pulp_created` - by CV created (descending)\n* `namespace` - by CV namespace\n* `-namespace` - by CV namespace (descending)\n* `name` - by CV name\n* `-name` - by CV name (descending)\n* `version` - by CV version\n* `-version` - by CV version (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repository ids.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_label",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "repository_name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter collectionversions that are in these repositories.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "signed",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by comma separate list of tags that must all be matched"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "version_range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Search Collection-Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionSearchListResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_ansible_galaxy_default_api_v3_plugin_ansible_search_collection_versions_rebuild",
                "description": "A viewset for cross-repo searches.",
                "tags": [
                    "Pulp_Ansible: Default Api V3 Plugin Ansible Search Collection-Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionVersionSearchList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnsibleRepositoryMark": {
                "type": "object",
                "description": "A serializer for the mark action.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "List of collection version hrefs to mark, use * to mark all content in repository"
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "content_units",
                    "value"
                ]
            },
            "AnsibleRepositoryRebuild": {
                "type": "object",
                "description": "Serializer for Ansible Repository Rebuild.",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "version": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    }
                }
            },
            "AnsibleRepositorySignature": {
                "type": "object",
                "description": "A serializer for the signing action.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "List of collection version hrefs to sign, use * to sign all content in repository"
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "A signing service to use to sign the collections"
                    }
                },
                "required": [
                    "content_units",
                    "signing_service"
                ]
            },
            "AnsibleRepositorySyncURL": {
                "type": "object",
                "description": "Serializer for Ansible Repository Sync URL.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    },
                    "optimize": {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to optimize sync or not."
                    }
                }
            },
            "ArtifactRefResponse": {
                "type": "object",
                "description": "A serializer for an Artifact reference.",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "sha256": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "filename",
                    "sha256",
                    "size"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ClientConfigurationResponse": {
                "type": "object",
                "description": "Configuration settings for the ansible-galaxy client.",
                "properties": {
                    "default_distribution_path": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "default_distribution_path"
                ]
            },
            "CollectionImportDetailResponse": {
                "type": "object",
                "description": "A serializer for a CollectionImport detail view.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "type": "object"
                    },
                    "messages": {
                        "type": "object"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "messages",
                    "started_at",
                    "state",
                    "updated_at"
                ]
            },
            "CollectionMetadataResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion metadata.",
                "properties": {
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 64
                        },
                        "readOnly": true
                    },
                    "contents": {
                        "readOnly": true
                    },
                    "dependencies": {
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "documentation": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "issues": {
                        "type": "string",
                        "readOnly": true
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 32
                        },
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tags"
                ]
            },
            "CollectionNamespaceResponse": {
                "type": "object",
                "description": "A serializer for a Collection Version namespace field.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "metadata_sha256": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "metadata_sha256",
                    "name"
                ]
            },
            "CollectionOneShot": {
                "type": "object",
                "description": "A serializer for the Collection One Shot Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The Collection tarball."
                    },
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "description": "An optional sha256 checksum of the uploaded file."
                    },
                    "expected_namespace": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected 'namespace' of the Collection to be verified against the metadata during import."
                    },
                    "expected_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected 'name' of the Collection to be verified against the metadata during import."
                    },
                    "expected_version": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected version of the Collection to be verified against the metadata during import."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "CollectionRefResponse": {
                "type": "object",
                "description": "A serializer for a Collection reference.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string",
                        "description": "Returns link to a collection.",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CollectionResponse": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "versions_url": {
                        "type": "string",
                        "description": "Get a link to a collection versions list.",
                        "readOnly": true
                    },
                    "highest_version": {
                        "type": "object",
                        "description": "Get a highest version and its link.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Get the timestamp of the lowest version CollectionVersion's created timestamp.",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Get the timestamp of the latest version CollectionVersion's created timestamp.",
                        "readOnly": true
                    },
                    "download_count": {
                        "type": "integer",
                        "description": "Get the download count of the collection",
                        "readOnly": true
                    }
                },
                "required": [
                    "deprecated"
                ]
            },
            "CollectionSummaryResponse": {
                "type": "object",
                "description": "Collection Version serializer without docs blob.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    },
                    "requires_ansible": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The version of Ansible required to use the collection. Multiple versions can be separated with a comma.",
                        "maxLength": 255
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "contents": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A short summary description of the collection."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.TagResponse"
                        },
                        "readOnly": true
                    }
                }
            },
            "CollectionVersionCopyMove": {
                "type": "object",
                "description": "Copy or move collections from a source repository into one or more destinations.\n\nThis will carry associated content like Signatures and Marks along.",
                "properties": {
                    "collection_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "A list of collection versions to move or copy."
                    },
                    "destination_repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "List of repository HREFs to put content in."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "description": "HREF for a signing service. This will be used to sign the collection before moving putting it in any new repositories."
                    }
                },
                "required": [
                    "collection_versions",
                    "destination_repositories"
                ]
            },
            "CollectionVersionDocsResponse": {
                "type": "object",
                "description": "A serializer to display the docs_blob of a CollectionVersion.",
                "properties": {
                    "docs_blob": {
                        "type": "object"
                    }
                },
                "required": [
                    "docs_blob"
                ]
            },
            "CollectionVersionListResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion list item.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "updated_at",
                    "version"
                ]
            },
            "CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    },
                    "artifact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "type": "string",
                        "description": "Get artifact download URL.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionNamespaceResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSignatureResponse"
                        }
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionMetadataResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "git_url": {
                        "type": "string",
                        "description": "Get the git URL.",
                        "readOnly": true
                    },
                    "git_commit_sha": {
                        "type": "string",
                        "description": "Get the git commit sha.",
                        "readOnly": true
                    },
                    "manifest": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding MANIFEST.json data."
                    },
                    "files": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding FILES.json data."
                    }
                },
                "required": [
                    "created_at",
                    "signatures",
                    "updated_at",
                    "version"
                ]
            },
            "CollectionVersionSearchList": {
                "type": "object",
                "description": "Cross-repo search results.",
                "properties": {
                    "repository": {
                        "$ref": "#/components/schemas/Repository"
                    },
                    "namespace_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadata"
                            }
                        ],
                        "nullable": true
                    },
                    "is_highest": {
                        "type": "boolean"
                    },
                    "is_deprecated": {
                        "type": "boolean"
                    },
                    "is_signed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "is_deprecated",
                    "is_highest",
                    "is_signed",
                    "namespace_metadata",
                    "repository"
                ]
            },
            "CollectionVersionSearchListResponse": {
                "type": "object",
                "description": "Cross-repo search results.",
                "properties": {
                    "repository": {
                        "$ref": "#/components/schemas/RepositoryResponse"
                    },
                    "collection_version": {
                        "$ref": "#/components/schemas/CollectionSummaryResponse"
                    },
                    "repository_version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                            }
                        ],
                        "nullable": true
                    },
                    "is_highest": {
                        "type": "boolean"
                    },
                    "is_deprecated": {
                        "type": "boolean"
                    },
                    "is_signed": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "collection_version",
                    "is_deprecated",
                    "is_highest",
                    "is_signed",
                    "namespace_metadata",
                    "repository"
                ]
            },
            "CollectionVersionSignatureResponse": {
                "type": "object",
                "description": "A serializer for the signatures on a Collection Version.",
                "properties": {
                    "signature": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "signing_service": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "pubkey_fingerprint"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "removed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "present": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "Copy": {
                "type": "object",
                "description": "A serializer for Content Copy API.",
                "properties": {
                    "config": {
                        "type": "object",
                        "description": "A JSON document describing sources, destinations, and content to be copied"
                    }
                },
                "required": [
                    "config"
                ]
            },
            "GalaxyRoleResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Roles.",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Get id.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "GalaxyRoleVersionResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Role versions.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "description": "Get source.",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MyPermissionsResponse": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "NamespaceLink": {
                "type": "object",
                "description": "Provides backwards compatible interface for links with the legacy\nGalaxyNG API.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "minLength": 1,
                        "maxLength": 256
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "NamespaceLinkResponse": {
                "type": "object",
                "description": "Provides backwards compatible interface for links with the legacy\nGalaxyNG API.",
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 256
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 256
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "NestedRole": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "role"
                ]
            },
            "NestedRoleResponse": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "ObjectRolesResponse": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedRoleResponse"
                        }
                    }
                },
                "required": [
                    "roles"
                ]
            },
            "PaginatedCollectionResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionVersionListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionListResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionVersionSearchListResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "type": "object",
                        "properties": {
                            "count": {
                                "type": "integer",
                                "example": 123
                            }
                        }
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "first": {
                                "type": "string",
                                "nullable": true
                            },
                            "previous": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            },
                            "last": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSearchListResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleVersionResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "PaginatedTagResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleCollectionDeprecatedResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleCollectionDeprecatedResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleNamespaceMetadataResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleNamespaceMetadataResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionMarkResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionMarkResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionSignatureResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionSignatureResponse"
                        }
                    }
                }
            },
            "Paginatedansible.GitRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.GitRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleResponse"
                        }
                    }
                }
            },
            "PatchedCollection": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "deprecated": {
                        "type": "boolean"
                    }
                }
            },
            "Patchedansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "Patchedansible.AnsibleNamespaceMetadata": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "Optional avatar image for Namespace"
                    }
                }
            },
            "Patchedansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "private": {
                        "type": "boolean"
                    }
                }
            },
            "Patchedansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The token key to use for authentication. See https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-clientfor more details",
                        "maxLength": 2000
                    },
                    "sync_dependencies": {
                        "type": "boolean",
                        "description": "Sync dependencies for collections specified via requirements file"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    }
                }
            },
            "Patchedansible.GitRemote": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                }
            },
            "Patchedansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                }
            },
            "PolicyEnum": {
                "enum": [
                    "immediate"
                ],
                "type": "string",
                "description": "* `immediate` - When syncing, download all metadata and content now."
            },
            "Repair": {
                "type": "object",
                "properties": {
                    "verify_checksums": {
                        "type": "boolean",
                        "default": true,
                        "description": "Will verify that the checksum of all stored files matches what saved in the database. Otherwise only the existence of the files will be checked. Enabled by default"
                    }
                }
            },
            "RepoMetadataResponse": {
                "type": "object",
                "description": "A serializer to display RepositoryVersion metadata.",
                "properties": {
                    "published": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "published"
                ]
            },
            "Repository": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositoryResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "SetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "TagResponse": {
                "type": "object",
                "description": "A serializer for the Tag model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "UnpaginatedCollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for unpaginated CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "href": {
                        "type": "string",
                        "description": "Get href.",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "requires_ansible": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "marks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Get a list of mark values filtering only those in the current repo.",
                        "readOnly": true
                    },
                    "artifact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ArtifactRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "type": "string",
                        "description": "Get artifact download URL.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionNamespaceResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionSignatureResponse"
                        }
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionMetadataResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "git_url": {
                        "type": "string",
                        "description": "Get the git URL.",
                        "readOnly": true
                    },
                    "git_commit_sha": {
                        "type": "string",
                        "description": "Get the git commit sha.",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "signatures",
                    "updated_at",
                    "version"
                ]
            },
            "UnsetLabel": {
                "type": "object",
                "description": "Serializer for synchronously UNsetting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "UnsetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously UNsetting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            },
            "ansible.AnsibleCollectionDeprecated": {
                "type": "object",
                "description": "A serializer for Ansible Collection Deprecations.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.AnsibleCollectionDeprecatedResponse": {
                "type": "object",
                "description": "A serializer for Ansible Collection Deprecations.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleDistributionResponse": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "client_url": {
                        "type": "string",
                        "description": "The URL of a Collection content source.",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleNamespaceMetadata": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 3,
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLink"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "Optional avatar image for Namespace"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleNamespaceMetadataResponse": {
                "type": "object",
                "description": "A serializer for Namespaces.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Required named, only accepts lowercase, numbers and underscores.",
                        "maxLength": 64,
                        "minLength": 3,
                        "pattern": "^(?!.*__)[a-z]+[0-9a-z_]*$"
                    },
                    "company": {
                        "type": "string",
                        "description": "Optional namespace company owner.",
                        "maxLength": 64
                    },
                    "email": {
                        "type": "string",
                        "description": "Optional namespace contact email.",
                        "maxLength": 256
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional short description.",
                        "maxLength": 256
                    },
                    "resources": {
                        "type": "string",
                        "description": "Optional resource page in markdown format."
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NamespaceLinkResponse"
                        },
                        "description": "Labeled related links."
                    },
                    "avatar_sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "SHA256 digest of avatar image if present.",
                        "maxLength": 64
                    },
                    "avatar_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Download link for avatar image if present."
                    },
                    "metadata_sha256": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "private": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    },
                    "last_synced_metadata_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Last synced metadata time."
                    },
                    "gpgkey": {
                        "type": "string",
                        "nullable": true,
                        "description": "Gpg public key to verify collection signatures against"
                    },
                    "last_sync_task": {
                        "readOnly": true
                    },
                    "private": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The token key to use for authentication. See https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-clientfor more details",
                        "maxLength": 2000
                    },
                    "sync_dependencies": {
                        "type": "boolean",
                        "description": "Sync dependencies for collections specified via requirements file"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.CollectionRemoteResponse": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "sync_dependencies": {
                        "type": "boolean",
                        "description": "Sync dependencies for collections specified via requirements file"
                    },
                    "signed_only": {
                        "type": "boolean",
                        "description": "Sync only collections that have a signature"
                    },
                    "last_sync_task": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.CollectionResponse": {
                "type": "object",
                "description": "A serializer for Ansible Collections.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.CollectionVersion": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "file_url": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A url that Pulp can download and turn into the content unit."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "expected_name": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "expected_namespace": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "expected_version": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    }
                }
            },
            "ansible.CollectionVersionMark": {
                "type": "object",
                "description": "A serializer for mark models.",
                "properties": {
                    "marked_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this mark is pointing to."
                    },
                    "value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "marked_collection",
                    "value"
                ]
            },
            "ansible.CollectionVersionMarkResponse": {
                "type": "object",
                "description": "A serializer for mark models.",
                "properties": {
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "marked_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this mark is pointing to."
                    },
                    "value": {
                        "type": "string",
                        "description": "The string value of this mark.",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "marked_collection",
                    "value"
                ]
            },
            "ansible.CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "description": "A collection identifier."
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 64
                        },
                        "readOnly": true,
                        "description": "A list of the CollectionVersion content's authors."
                    },
                    "contents": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A short summary description of the collection."
                    },
                    "docs_blob": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding the various documentation blobs in the collection."
                    },
                    "manifest": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding MANIFEST.json data."
                    },
                    "files": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON field holding FILES.json data."
                    },
                    "documentation": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to any online docs.",
                        "maxLength": 2000
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to the homepage of the collection/project.",
                        "maxLength": 2000
                    },
                    "issues": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL to the collection issue tracker.",
                        "maxLength": 2000
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 32
                        },
                        "readOnly": true,
                        "description": "A list of licenses for content inside of a collection."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the collection.",
                        "maxLength": 64
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The namespace of the collection.",
                        "maxLength": 64
                    },
                    "origin_repository": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL of the originating SCM repository.",
                        "maxLength": 2000
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.TagResponse"
                        },
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of the collection.",
                        "maxLength": 128
                    },
                    "requires_ansible": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The version of Ansible required to use the collection. Multiple versions can be separated with a comma.",
                        "maxLength": 255
                    }
                }
            },
            "ansible.CollectionVersionSignature": {
                "type": "object",
                "description": "A serializer for signature models.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "file_url": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A url that Pulp can download and turn into the content unit."
                    },
                    "signed_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this signature is pointing to."
                    }
                },
                "required": [
                    "signed_collection"
                ]
            },
            "ansible.CollectionVersionSignatureResponse": {
                "type": "object",
                "description": "A serializer for signature models.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "signed_collection": {
                        "type": "string",
                        "format": "uri",
                        "description": "The content this signature is pointing to."
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The fingerprint of the public key."
                    },
                    "signing_service": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The signing service used to create the signature."
                    }
                },
                "required": [
                    "signed_collection"
                ]
            },
            "ansible.GitRemote": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.GitRemoteResponse": {
                "type": "object",
                "description": "A serializer for Git Collection Remotes.",
                "properties": {
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "metadata_only": {
                        "type": "boolean",
                        "description": "If True, only metadata about the content will be stored in Pulp. Clients will retrieve content from the remote URL."
                    },
                    "git_ref": {
                        "type": "string",
                        "description": "A git ref. e.g.: branch, tag, or commit sha."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.Role": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "version": {
                        "type": "string",
                        "minLength": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "namespace": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "proxy_username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to authenticte to the proxy."
                    },
                    "proxy_password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to authenticate to the proxy. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleRemoteResponse": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleResponse": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.TagResponse": {
                "type": "object",
                "description": "A serializer for nesting in the CollectionVersion model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the Tag."
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}