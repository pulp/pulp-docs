{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulpproject.org/pulp-docs/docs/assets/pulp_logo_icon.svg"
        },
        "x-pulp-app-versions": {
            "core": "3.76.0.dev"
        },
        "x-pulp-domain-enabled": false
    },
    "paths": {
        "/pulp/api/v3/access_policies/": {
            "get": {
                "operationId": "access_policies_list",
                "description": "ViewSet for AccessPolicy.",
                "summary": "List access policys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "customized",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where customized matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-creation_hooks",
                                    "-customized",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-queryset_scoping",
                                    "-statements",
                                    "-viewset_name",
                                    "creation_hooks",
                                    "customized",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "queryset_scoping",
                                    "statements",
                                    "viewset_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `creation_hooks` - Creation hooks\n* `-creation_hooks` - Creation hooks (descending)\n* `statements` - Statements\n* `-statements` - Statements (descending)\n* `viewset_name` - Viewset name\n* `-viewset_name` - Viewset name (descending)\n* `customized` - Customized\n* `-customized` - Customized (descending)\n* `queryset_scoping` - Queryset scoping\n* `-queryset_scoping` - Queryset scoping (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where viewset_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "viewset_name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where viewset_name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccessPolicyResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}": {
            "get": {
                "operationId": "access_policies_read",
                "description": "ViewSet for AccessPolicy.",
                "summary": "Inspect an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "access_policies_update",
                "description": "ViewSet for AccessPolicy.",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "access_policies_partial_update",
                "description": "ViewSet for AccessPolicy.",
                "summary": "Update an access policy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAccessPolicy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{access_policy_href}reset/": {
            "post": {
                "operationId": "access_policies_reset",
                "description": "Reset the access policy to its uncustomized default value.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "access_policy_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Access_Policies"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessPolicyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/artifacts/": {
            "get": {
                "operationId": "artifacts_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List artifacts",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "md5",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where md5 matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-file",
                                    "-md5",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-sha1",
                                    "-sha224",
                                    "-sha256",
                                    "-sha384",
                                    "-sha512",
                                    "-size",
                                    "-timestamp_of_interest",
                                    "file",
                                    "md5",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "sha1",
                                    "sha224",
                                    "sha256",
                                    "sha384",
                                    "sha512",
                                    "size",
                                    "timestamp_of_interest"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `file` - File\n* `-file` - File (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `md5` - Md5\n* `-md5` - Md5 (descending)\n* `sha1` - Sha1\n* `-sha1` - Sha1 (descending)\n* `sha224` - Sha224\n* `-sha224` - Sha224 (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `sha384` - Sha384\n* `-sha384` - Sha384 (descending)\n* `sha512` - Sha512\n* `-sha512` - Sha512 (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Artifacts have been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "sha1",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha1 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha224",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha224 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha384",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha384 matches value"
                    },
                    {
                        "in": "query",
                        "name": "sha512",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha512 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "artifacts_create",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Create an artifact",
                "tags": [
                    "Artifacts"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_href}": {
            "get": {
                "operationId": "artifacts_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "artifacts_delete",
                "description": "Remove Artifact only if it is not associated with any Content.",
                "summary": "Delete an artifact",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/content/": {
            "get": {
                "operationId": "content_list",
                "description": "Endpoint to list all content.",
                "summary": "List content",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "core.openpgp_publickey",
                                "core.openpgp_publicsubkey",
                                "core.openpgp_signature",
                                "core.openpgp_userattribute",
                                "core.openpgp_userid",
                                "core.publishedmetadata",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `core.openpgp_publickey` - core.openpgp_publickey\n* `core.openpgp_publicsubkey` - core.openpgp_publicsubkey\n* `core.openpgp_userid` - core.openpgp_userid\n* `core.openpgp_userattribute` - core.openpgp_userattribute\n* `core.openpgp_signature` - core.openpgp_signature\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "core.openpgp_publickey",
                                    "core.openpgp_publicsubkey",
                                    "core.openpgp_signature",
                                    "core.openpgp_userattribute",
                                    "core.openpgp_userid",
                                    "core.publishedmetadata",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.publishedmetadata` - core.publishedmetadata\n* `core.openpgp_publickey` - core.openpgp_publickey\n* `core.openpgp_publicsubkey` - core.openpgp_publicsubkey\n* `core.openpgp_userid` - core.openpgp_userid\n* `core.openpgp_userattribute` - core.openpgp_userattribute\n* `core.openpgp_signature` - core.openpgp_signature\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMultipleArtifactContentResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/core/openpgp_publickey/": {
            "get": {
                "operationId": "content_core_openpgp_publickey_list",
                "description": "A ViewSet for uploads that do not require to store an uploaded content as an Artifact.",
                "summary": "List open pgp public keys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fingerprint",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where fingerprint matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created",
                                    "-fingerprint",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-raw_data",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "created",
                                    "fingerprint",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "raw_data",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `raw_data` - Raw data\n* `-raw_data` - Raw data (descending)\n* `fingerprint` - Fingerprint\n* `-fingerprint` - Fingerprint (descending)\n* `created` - Created\n* `-created` - Created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publickey"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPPublicKeyResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_core_openpgp_publickey_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "summary": "Create an open pgp public key",
                "tags": [
                    "Content: Openpgp_Publickey"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPPublicKey"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPPublicKey"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_key_href}": {
            "get": {
                "operationId": "content_core_openpgp_publickey_read",
                "description": "A ViewSet for uploads that do not require to store an uploaded content as an Artifact.",
                "summary": "Inspect an open pgp public key",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_key_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publickey"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPPublicKeyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_key_href}set_label/": {
            "post": {
                "operationId": "content_core_openpgp_publickey_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_key_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publickey"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_key_href}unset_label/": {
            "post": {
                "operationId": "content_core_openpgp_publickey_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_key_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publickey"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/core/openpgp_publicsubkey/": {
            "get": {
                "operationId": "content_core_openpgp_publicsubkey_list",
                "description": "Content viewset that supports only GET by default.",
                "summary": "List open pgp public subkeys",
                "parameters": [
                    {
                        "in": "query",
                        "name": "fingerprint",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where fingerprint matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created",
                                    "-fingerprint",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-raw_data",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "created",
                                    "fingerprint",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "raw_data",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `raw_data` - Raw data\n* `-raw_data` - Raw data (descending)\n* `fingerprint` - Fingerprint\n* `-fingerprint` - Fingerprint (descending)\n* `created` - Created\n* `-created` - Created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publicsubkey"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPPublicSubkeyResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_subkey_href}": {
            "get": {
                "operationId": "content_core_openpgp_publicsubkey_read",
                "description": "Content viewset that supports only GET by default.",
                "summary": "Inspect an open pgp public subkey",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_subkey_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publicsubkey"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPPublicSubkeyResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_subkey_href}set_label/": {
            "post": {
                "operationId": "content_core_openpgp_publicsubkey_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_subkey_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publicsubkey"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_public_subkey_href}unset_label/": {
            "post": {
                "operationId": "content_core_openpgp_publicsubkey_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_public_subkey_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Publicsubkey"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/core/openpgp_signature/": {
            "get": {
                "operationId": "content_core_openpgp_signature_list",
                "description": "Content viewset that supports only GET by default.",
                "summary": "List open pgp signatures",
                "parameters": [
                    {
                        "in": "query",
                        "name": "issuer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where issuer matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created",
                                    "-expiration_time",
                                    "-issuer",
                                    "-key_expiration_time",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-raw_data",
                                    "-sha256",
                                    "-signature_type",
                                    "-signers_user_id",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "created",
                                    "expiration_time",
                                    "issuer",
                                    "key_expiration_time",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "raw_data",
                                    "sha256",
                                    "signature_type",
                                    "signers_user_id",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `raw_data` - Raw data\n* `-raw_data` - Raw data (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `signature_type` - Signature type\n* `-signature_type` - Signature type (descending)\n* `created` - Created\n* `-created` - Created (descending)\n* `expiration_time` - Expiration time\n* `-expiration_time` - Expiration time (descending)\n* `key_expiration_time` - Key expiration time\n* `-key_expiration_time` - Key expiration time (descending)\n* `issuer` - Issuer\n* `-issuer` - Issuer (descending)\n* `signers_user_id` - Signers user id\n* `-signers_user_id` - Signers user id (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Signature"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPSignatureResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_signature_href}": {
            "get": {
                "operationId": "content_core_openpgp_signature_read",
                "description": "Content viewset that supports only GET by default.",
                "summary": "Inspect an open pgp signature",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Signature"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPSignatureResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_signature_href}set_label/": {
            "post": {
                "operationId": "content_core_openpgp_signature_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Signature"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_signature_href}unset_label/": {
            "post": {
                "operationId": "content_core_openpgp_signature_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_signature_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Signature"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/core/openpgp_userattribute/": {
            "get": {
                "operationId": "content_core_openpgp_userattribute_list",
                "description": "Content viewset that supports only GET by default.",
                "summary": "List open pgp user attributes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-raw_data",
                                    "-sha256",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "raw_data",
                                    "sha256",
                                    "timestamp_of_interest",
                                    "upstream_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `raw_data` - Raw data\n* `-raw_data` - Raw data (descending)\n* `sha256` - Sha256\n* `-sha256` - Sha256 (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "sha256",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where sha256 matches value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userattribute"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPUserAttributeResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_attribute_href}": {
            "get": {
                "operationId": "content_core_openpgp_userattribute_read",
                "description": "Content viewset that supports only GET by default.",
                "summary": "Inspect an open pgp user attribute",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_attribute_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userattribute"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPUserAttributeResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_attribute_href}set_label/": {
            "post": {
                "operationId": "content_core_openpgp_userattribute_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_attribute_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userattribute"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_attribute_href}unset_label/": {
            "post": {
                "operationId": "content_core_openpgp_userattribute_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_attribute_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userattribute"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/core/openpgp_userid/": {
            "get": {
                "operationId": "content_core_openpgp_userid_list",
                "description": "Content viewset that supports only GET by default.",
                "summary": "List open pgp user ids",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-raw_data",
                                    "-timestamp_of_interest",
                                    "-upstream_id",
                                    "-user_id",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "raw_data",
                                    "timestamp_of_interest",
                                    "upstream_id",
                                    "user_id"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `upstream_id` - Upstream id\n* `-upstream_id` - Upstream id (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `timestamp_of_interest` - Timestamp of interest\n* `-timestamp_of_interest` - Timestamp of interest (descending)\n* `raw_data` - Raw data\n* `-raw_data` - Raw data (descending)\n* `user_id` - User id\n* `-user_id` - User id (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "orphaned_for",
                        "schema": {
                            "type": "number"
                        },
                        "description": "Minutes Content has been orphaned for. -1 uses ORPHAN_PROTECTION_TIME."
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_added",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id matches value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id contains value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id contains value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id matches value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where user_id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "user_id__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id starts with value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "user_id__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where user_id starts with value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userid"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPUserIDResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_i_d_href}": {
            "get": {
                "operationId": "content_core_openpgp_userid_read",
                "description": "Content viewset that supports only GET by default.",
                "summary": "Inspect an open pgp user id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_i_d_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userid"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPUserIDResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_i_d_href}set_label/": {
            "post": {
                "operationId": "content_core_openpgp_userid_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_i_d_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userid"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_user_i_d_href}unset_label/": {
            "post": {
                "operationId": "content_core_openpgp_userid_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_user_i_d_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Content: Openpgp_Userid"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/": {
            "get": {
                "operationId": "contentguards_list",
                "description": "Endpoint to list all contentguards.",
                "summary": "List content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "certguard.rhsm",
                                "certguard.x509",
                                "core.composite",
                                "core.content_redirect",
                                "core.header",
                                "core.rbac"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "certguard.rhsm",
                                    "certguard.x509",
                                    "core.composite",
                                    "core.content_redirect",
                                    "core.header",
                                    "core.rbac"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.rbac` - core.rbac\n* `core.content_redirect` - core.content_redirect\n* `core.header` - core.header\n* `core.composite` - core.composite\n* `certguard.rhsm` - certguard.rhsm\n* `certguard.x509` - certguard.x509",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/composite/": {
            "get": {
                "operationId": "contentguards_core_composite_list",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "List composite content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompositeContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_composite_create",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Create a composite content guard",
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_composite_read",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Inspect a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_composite_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_composite_partial_update",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Update a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCompositeContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompositeContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_composite_delete",
                "description": "Content guard that queries a list-of content-guards for access permissions.",
                "summary": "Delete a composite content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{composite_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_composite_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_composite_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_composite_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{composite_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_composite_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "composite_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Composite"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/content_redirect/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "List content redirect content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContentRedirectContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_content_redirect_create",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Create a content redirect content guard",
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_content_redirect_read",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Inspect a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_content_redirect_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_content_redirect_partial_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Update a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_content_redirect_delete",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "summary": "Delete a content redirect content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_content_redirect_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_content_redirect_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/header/": {
            "get": {
                "operationId": "contentguards_core_header_list",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "List header content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHeaderContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_header_create",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Create a header content guard",
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_header_read",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Inspect a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_header_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/HeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_header_partial_update",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Update a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedHeaderContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HeaderContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_header_delete",
                "description": "Content guard to protect the content app using a specific header.",
                "summary": "Delete a header content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{header_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_header_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_header_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_header_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{header_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_header_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "header_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Header"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/core/rbac/": {
            "get": {
                "operationId": "contentguards_core_rbac_list",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "List rbac content guards",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "description",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRBACContentGuardResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "contentguards_core_rbac_create",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Create a rbac content guard",
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}": {
            "get": {
                "operationId": "contentguards_core_rbac_read",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Inspect a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "contentguards_core_rbac_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "contentguards_core_rbac_partial_update",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Update a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRBACContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RBACContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "contentguards_core_rbac_delete",
                "description": "Viewset for creating contentguards that use RBAC to protect content.\nHas add and remove actions for managing permission for users and groups to download content\nprotected by this guard.",
                "summary": "Delete a rbac content guard",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}add_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}list_roles/": {
            "get": {
                "operationId": "contentguards_core_rbac_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}my_permissions/": {
            "get": {
                "operationId": "contentguards_core_rbac_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{r_b_a_c_content_guard_href}remove_role/": {
            "post": {
                "operationId": "contentguards_core_rbac_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "r_b_a_c_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Rbac"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/": {
            "get": {
                "operationId": "distributions_list",
                "description": "Provides base viewset for Distributions.",
                "summary": "List distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "checkpoint",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where checkpoint matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-checkpoint",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "checkpoint",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `checkpoint` - Checkpoint\n* `-checkpoint` - Checkpoint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "core.artifact",
                                "core.openpgp",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.artifact` - core.artifact\n* `core.openpgp` - core.openpgp\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "core.artifact",
                                    "core.openpgp",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.artifact` - core.artifact\n* `core.openpgp` - core.openpgp\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/core/artifacts/": {
            "get": {
                "operationId": "distributions_core_artifacts_list",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "List artifact distributions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_path",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_path contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_path__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_path is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "checkpoint",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where checkpoint matches value"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-checkpoint",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "checkpoint",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `checkpoint` - Checkpoint\n* `-checkpoint` - Checkpoint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository matches value"
                    },
                    {
                        "in": "query",
                        "name": "repository__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where repository is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedArtifactDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_distribution_href}": {
            "get": {
                "operationId": "distributions_core_artifacts_read",
                "description": "ViewSet for ArtifactDistribution.",
                "summary": "Inspect an artifact distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Artifacts"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/core/openpgp/": {
            "get": {
                "operationId": "distributions_core_openpgp_list",
                "description": "Provides read and list methods and also provides asynchronous CUD methods to dispatch tasks\nwith reservation that lock all Distributions preventing race conditions during base_path\nchecking.",
                "summary": "List open pgp distributions",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-base_path",
                                    "-checkpoint",
                                    "-hidden",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "base_path",
                                    "checkpoint",
                                    "hidden",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `base_path` - Base path\n* `-base_path` - Base path (descending)\n* `hidden` - Hidden\n* `-hidden` - Hidden (descending)\n* `checkpoint` - Checkpoint\n* `-checkpoint` - Checkpoint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where repository_version matches value"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter distributions based on the content served by them"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_core_openpgp_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create an open pgp distribution",
                "tags": [
                    "Distributions: Openpgp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_distribution_href}": {
            "get": {
                "operationId": "distributions_core_openpgp_read",
                "description": "Provides read and list methods and also provides asynchronous CUD methods to dispatch tasks\nwith reservation that lock all Distributions preventing race conditions during base_path\nchecking.",
                "summary": "Inspect an open pgp distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_core_openpgp_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an open pgp distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_core_openpgp_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an open pgp distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_core_openpgp_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an open pgp distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_distribution_href}set_label/": {
            "post": {
                "operationId": "distributions_core_openpgp_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_distribution_href}unset_label/": {
            "post": {
                "operationId": "distributions_core_openpgp_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Openpgp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/domains/": {
            "get": {
                "operationId": "domains_list",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "List domains",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-hide_guarded_distributions",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-redirect_to_object_storage",
                                    "-storage_class",
                                    "-storage_settings",
                                    "description",
                                    "hide_guarded_distributions",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "redirect_to_object_storage",
                                    "storage_class",
                                    "storage_settings"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `storage_class` - Storage class\n* `-storage_class` - Storage class (descending)\n* `storage_settings` - Storage settings\n* `-storage_settings` - Storage settings (descending)\n* `redirect_to_object_storage` - Redirect to object storage\n* `-redirect_to_object_storage` - Redirect to object storage (descending)\n* `hide_guarded_distributions` - Hide guarded distributions\n* `-hide_guarded_distributions` - Hide guarded distributions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDomainResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "domains_create",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Create a domain",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{domain_href}": {
            "get": {
                "operationId": "domains_read",
                "description": "ViewSet for Domain.\n\nNOTE: This API endpoint is in \"tech preview\" and subject to change",
                "summary": "Inspect a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DomainResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "domains_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Domain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "domains_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDomain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "domains_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a domain",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{domain_href}set_label/": {
            "post": {
                "operationId": "domains_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{domain_href}unset_label/": {
            "post": {
                "operationId": "domains_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "domain_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/domains/migrate/": {
            "post": {
                "operationId": "domains_migrate",
                "description": "Migrate the domain's storage backend to a new one.\n\nLaunches a background task to copy the domain's artifacts over to the supplied storage\nbackend. Then updates the domain's storage settings to the new storage backend. This task\ndoes not delete the stored files of the artifacts from the previous backend.\n\n**IMPORTANT** This task will block all other tasks within the domain until the migration is\ncompleted, essentially putting the domain into a read only state. Content will still be\nserved from the old storage backend until the migration has completed, so don't remove\nthe old backend until then. Note, this endpoint is not allowed on the default domain.\n\nThis feature is in Tech Preview and is subject to future change and thus not guaranteed to\nbe backwards compatible.",
                "summary": "Migrate storage backend",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainBackendMigrator"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainBackendMigrator"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DomainBackendMigrator"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/core/filesystem/": {
            "get": {
                "operationId": "exporters_core_filesystem_list",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "List filesystem exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-method",
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "method",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `method` - Method\n* `-method` - Method (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_create",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Create a filesystem exporter",
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_list",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "List filesystem exports",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFilesystemExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_filesystem_exports_create",
                "description": "Trigger an asynchronous task to export files to the filesystem",
                "summary": "Create a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{filesystem_filesystem_export_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_exports_read",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Inspect a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_exports_delete",
                "description": "Endpoint for managing FilesystemExports.",
                "summary": "Delete a filesystem export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_filesystem_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{filesystem_exporter_href}": {
            "get": {
                "operationId": "exporters_core_filesystem_read",
                "description": "Endpoint for managing FilesystemExporters.",
                "summary": "Inspect a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_filesystem_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_filesystem_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_filesystem_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a filesystem exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/core/pulp/": {
            "get": {
                "operationId": "exporters_core_pulp_list",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "List pulp exporters",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-path",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "path",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `path` - Path\n* `-path` - Path (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_create",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Create a pulp exporter",
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_exporter_href}exports/": {
            "get": {
                "operationId": "exporters_core_pulp_exports_list",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "List pulp exports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpExportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "exporters_core_pulp_exports_create",
                "description": "Trigger an asynchronous task to export a set of repositories",
                "summary": "Create a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_export_href}": {
            "get": {
                "operationId": "exporters_core_pulp_exports_read",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Inspect a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_exports_delete",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "summary": "Delete a pulp export",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp Exports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_exporter_href}": {
            "get": {
                "operationId": "exporters_core_pulp_read",
                "description": "ViewSet for viewing PulpExporters.",
                "summary": "Inspect a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "exporters_core_pulp_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "exporters_core_pulp_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "exporters_core_pulp_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a pulp exporter",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "ViewSet for Group.",
                "summary": "List groups",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where id matches value"
                    },
                    {
                        "in": "query",
                        "name": "id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where id is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-id",
                                    "-name",
                                    "-pk",
                                    "id",
                                    "name",
                                    "pk"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_create",
                "description": "ViewSet for Group.",
                "summary": "Create a group",
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}roles/": {
            "get": {
                "operationId": "groups_roles_list",
                "description": "ViewSet for GroupRole.",
                "summary": "List group roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_roles_create",
                "description": "ViewSet for GroupRole.",
                "summary": "Create a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_group_role_href}": {
            "get": {
                "operationId": "groups_roles_read",
                "description": "ViewSet for GroupRole.",
                "summary": "Inspect a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_roles_delete",
                "description": "ViewSet for GroupRole.",
                "summary": "Delete a group role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_group_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}users/": {
            "get": {
                "operationId": "groups_users_list",
                "description": "List group users.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "groups_users_create",
                "description": "Add a user to a group.",
                "summary": "Create an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupUserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{groups_user_href}": {
            "delete": {
                "operationId": "groups_users_delete",
                "description": "Remove a user from a group.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "groups_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups: Users"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}": {
            "get": {
                "operationId": "groups_read",
                "description": "ViewSet for Group.",
                "summary": "Inspect a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "groups_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "ViewSet for Group.",
                "summary": "Update a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "ViewSet for Group.",
                "summary": "Delete a group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{group_href}add_role/": {
            "post": {
                "operationId": "groups_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}list_roles/": {
            "get": {
                "operationId": "groups_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}my_permissions/": {
            "get": {
                "operationId": "groups_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{group_href}remove_role/": {
            "post": {
                "operationId": "groups_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/importers/core/pulp/": {
            "get": {
                "operationId": "importers_core_pulp_list",
                "description": "ViewSet for PulpImporters.",
                "summary": "List pulp importers",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPulpImporterResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_create",
                "description": "ViewSet for PulpImporters.",
                "summary": "Create a pulp importer",
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_importer_href}imports/": {
            "get": {
                "operationId": "importers_core_pulp_imports_list",
                "description": "ViewSet for PulpImports.",
                "summary": "List pulp imports",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedImportResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "importers_core_pulp_imports_create",
                "description": "Trigger an asynchronous task to import a Pulp export.",
                "summary": "Create a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_pulp_import_href}": {
            "get": {
                "operationId": "importers_core_pulp_imports_read",
                "description": "ViewSet for PulpImports.",
                "summary": "Inspect a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_imports_delete",
                "description": "ViewSet for PulpImports.",
                "summary": "Delete a pulp import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp Imports"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_importer_href}": {
            "get": {
                "operationId": "importers_core_pulp_read",
                "description": "ViewSet for PulpImporters.",
                "summary": "Inspect a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "importers_core_pulp_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "importers_core_pulp_partial_update",
                "description": "ViewSet for PulpImporters.",
                "summary": "Update a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "importers_core_pulp_delete",
                "description": "ViewSet for PulpImporters.",
                "summary": "Delete a pulp importer",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/importers/core/pulp/import-check/": {
            "post": {
                "operationId": "pulp_import_check_post",
                "description": "Evaluates validity of proposed PulpImport parameters 'toc', 'path', and 'repo_mapping'.\n\n* Checks that toc, path are in ALLOWED_IMPORT_PATHS\n* if ALLOWED:\n  * Checks that toc, path exist and are readable\n  * If toc specified, checks that containing dir is writeable\n* Checks that repo_mapping is valid JSON",
                "summary": "Validate the parameters to be used for a PulpImport call",
                "tags": [
                    "Importers: Pulp Import-Check"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImportCheck"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImportCheckResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/livez/": {
            "get": {
                "operationId": "livez_read",
                "description": "Returns 200 OK when API is alive.",
                "summary": "Inspect liveness of Pulp's REST API.",
                "tags": [
                    "Livez"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/login/": {
            "get": {
                "operationId": "login_read",
                "tags": [
                    "Login"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "login",
                "tags": [
                    "Login"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "logout",
                "tags": [
                    "Login"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/orphans/": {
            "delete": {
                "operationId": "orphans_delete",
                "description": "DEPRECATED! Trigger an asynchronous task that deletes all orphaned content and artifacts. Use the `POST /pulp/api/v3/orphans/cleanup/` call instead.",
                "summary": "Delete orphans",
                "tags": [
                    "Orphans"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/orphans/cleanup/": {
            "post": {
                "operationId": "orphans_cleanup_cleanup",
                "description": "Trigger an asynchronous orphan cleanup operation.",
                "tags": [
                    "Orphans: Cleanup"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrphansCleanup"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/publications/": {
            "get": {
                "operationId": "publications_list",
                "description": "A base class for any publication viewset.",
                "summary": "List publications",
                "parameters": [
                    {
                        "in": "query",
                        "name": "checkpoint",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where checkpoint matches value"
                    },
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-checkpoint",
                                    "-complete",
                                    "-pass_through",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "checkpoint",
                                    "complete",
                                    "pass_through",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "pulp_type"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `pass_through` - Pass through\n* `-pass_through` - Pass through (descending)\n* `checkpoint` - Checkpoint\n* `-checkpoint` - Checkpoint (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "repository",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Repository referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "repository_version",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Repository Version referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPublicationResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/": {
            "get": {
                "operationId": "remotes_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-connect_timeout",
                                    "-download_concurrency",
                                    "-headers",
                                    "-max_retries",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-proxy_password",
                                    "-proxy_url",
                                    "-proxy_username",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-rate_limit",
                                    "-sock_connect_timeout",
                                    "-sock_read_timeout",
                                    "-tls_validation",
                                    "-total_timeout",
                                    "-url",
                                    "-username",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "connect_timeout",
                                    "download_concurrency",
                                    "headers",
                                    "max_retries",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "proxy_password",
                                    "proxy_url",
                                    "proxy_username",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "rate_limit",
                                    "sock_connect_timeout",
                                    "sock_read_timeout",
                                    "tls_validation",
                                    "total_timeout",
                                    "url",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `url` - Url\n* `-url` - Url (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `proxy_url` - Proxy url\n* `-proxy_url` - Proxy url (descending)\n* `proxy_username` - Proxy username\n* `-proxy_username` - Proxy username (descending)\n* `proxy_password` - Proxy password\n* `-proxy_password` - Proxy password (descending)\n* `download_concurrency` - Download concurrency\n* `-download_concurrency` - Download concurrency (descending)\n* `max_retries` - Max retries\n* `-max_retries` - Max retries (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `total_timeout` - Total timeout\n* `-total_timeout` - Total timeout (descending)\n* `connect_timeout` - Connect timeout\n* `-connect_timeout` - Connect timeout (descending)\n* `sock_connect_timeout` - Sock connect timeout\n* `-sock_connect_timeout` - Sock connect timeout (descending)\n* `sock_read_timeout` - Sock read timeout\n* `-sock_read_timeout` - Sock read timeout (descending)\n* `headers` - Headers\n* `-headers` - Headers (descending)\n* `rate_limit` - Rate limit\n* `-rate_limit` - Rate limit (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_last_updated has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_last_updated is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_last_updated__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_last_updated is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGenericRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repair/": {
            "post": {
                "operationId": "repair_post",
                "description": "Trigger an asynchronous task that checks for missing or corrupted artifacts, and attempts to redownload them.",
                "summary": "Repair Artifact Storage",
                "tags": [
                    "Repair"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Repair"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/": {
            "get": {
                "operationId": "repositories_list",
                "description": "Endpoint to list all repositories.",
                "summary": "List repositories",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "core.openpgp",
                                "file.file"
                            ]
                        },
                        "description": "Pulp type\n\n* `core.openpgp` - core.openpgp\n* `file.file` - file.file"
                    },
                    {
                        "in": "query",
                        "name": "pulp_type__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "core.openpgp",
                                    "file.file"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `core.openpgp` - core.openpgp\n* `file.file` - file.file",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/core/openpgp_keyring/": {
            "get": {
                "operationId": "repositories_core_openpgp_keyring_list",
                "description": "A ViewSet for an ordinary repository.",
                "summary": "List open pgp keyrings",
                "parameters": [
                    {
                        "in": "query",
                        "name": "latest_with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-name",
                                    "-next_version",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_labels",
                                    "-pulp_last_updated",
                                    "-pulp_type",
                                    "-retain_repo_versions",
                                    "-user_hidden",
                                    "description",
                                    "name",
                                    "next_version",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_labels",
                                    "pulp_last_updated",
                                    "pulp_type",
                                    "retain_repo_versions",
                                    "user_hidden"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `pulp_type` - Pulp type\n* `-pulp_type` - Pulp type (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `pulp_labels` - Pulp labels\n* `-pulp_labels` - Pulp labels (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `next_version` - Next version\n* `-next_version` - Next version (descending)\n* `retain_repo_versions` - Retain repo versions\n* `-retain_repo_versions` - Retain repo versions (descending)\n* `user_hidden` - User hidden\n* `-user_hidden` - User hidden (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_label_select",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter labels by search string"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "remote",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions matches value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where retain_repo_versions has a null value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__ne",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where retain_repo_versions not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "retain_repo_versions__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where retain_repo_versions is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "with_content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOpenPGPKeyringResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_core_openpgp_keyring_create",
                "description": "A ViewSet for an ordinary repository.",
                "summary": "Create an open pgp keyring",
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPKeyringResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}": {
            "get": {
                "operationId": "repositories_core_openpgp_keyring_read",
                "description": "A ViewSet for an ordinary repository.",
                "summary": "Inspect an open pgp keyring",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenPGPKeyringResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_core_openpgp_keyring_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an open pgp keyring",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenPGPKeyring"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_core_openpgp_keyring_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an open pgp keyring",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPKeyring"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPKeyring"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOpenPGPKeyring"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_core_openpgp_keyring_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an open pgp keyring",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}add_role/": {
            "post": {
                "operationId": "repositories_core_openpgp_keyring_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}list_roles/": {
            "get": {
                "operationId": "repositories_core_openpgp_keyring_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}modify/": {
            "post": {
                "operationId": "repositories_core_openpgp_keyring_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}my_permissions/": {
            "get": {
                "operationId": "repositories_core_openpgp_keyring_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}remove_role/": {
            "post": {
                "operationId": "repositories_core_openpgp_keyring_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}set_label/": {
            "post": {
                "operationId": "repositories_core_openpgp_keyring_set_label",
                "description": "Set a single pulp_label on the object to a specific value or null.",
                "summary": "Set a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{open_p_g_p_keyring_href}unset_label/": {
            "post": {
                "operationId": "repositories_core_openpgp_keyring_unset_label",
                "description": "Unset a single pulp_label on the object.",
                "summary": "Unset a label",
                "parameters": [
                    {
                        "in": "path",
                        "name": "open_p_g_p_keyring_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Openpgp_Keyring"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnsetLabel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnsetLabelResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/reclaim_space/": {
            "post": {
                "operationId": "repositories_reclaim_space_reclaim",
                "description": "Trigger an asynchronous space reclaim operation.",
                "tags": [
                    "Repositories: Reclaim_Space"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ReclaimSpace"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repository_versions/": {
            "get": {
                "operationId": "repository_versions_list",
                "description": "A mixin to hold the shared get_queryset logic used by RepositoryVersionViewSets.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "content",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Content Unit referenced by HREF/PRN"
                    },
                    {
                        "in": "query",
                        "name": "content__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number matches value"
                    },
                    {
                        "in": "query",
                        "name": "number__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "number__gte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than value"
                    },
                    {
                        "in": "query",
                        "name": "number__lte",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where number is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "number__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where number is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-complete",
                                    "-info",
                                    "-number",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "complete",
                                    "info",
                                    "number",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `number` - Number\n* `-number` - Number (descending)\n* `complete` - Complete\n* `-complete` - Complete (descending)\n* `info` - Info\n* `-info` - Info (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repository_Versions"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/roles/": {
            "get": {
                "operationId": "roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "query",
                        "name": "contains_permission",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter roles that have any of the permissions in the list.",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "description__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description contains value"
                    },
                    {
                        "in": "query",
                        "name": "description__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where description matches value"
                    },
                    {
                        "in": "query",
                        "name": "for_object_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter roles that only have permissions for the specified object HREF."
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "locked",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where locked matches value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-locked",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "description",
                                    "locked",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `locked` - Locked\n* `-locked` - Locked (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{role_href}": {
            "get": {
                "operationId": "roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "roles_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "roles_partial_update",
                "description": "ViewSet for Role.",
                "summary": "Update a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "roles_delete",
                "description": "ViewSet for Role.",
                "summary": "Delete a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/signing-services/": {
            "get": {
                "operationId": "signing_services_list",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "List signing services",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-name",
                                    "-pk",
                                    "-pubkey_fingerprint",
                                    "-public_key",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-script",
                                    "name",
                                    "pk",
                                    "pubkey_fingerprint",
                                    "public_key",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "script"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `public_key` - Public key\n* `-public_key` - Public key (descending)\n* `pubkey_fingerprint` - Pubkey fingerprint\n* `-pubkey_fingerprint` - Pubkey fingerprint (descending)\n* `script` - Script\n* `-script` - Script (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSigningServiceResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{signing_service_href}": {
            "get": {
                "operationId": "signing_services_read",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "summary": "Inspect a signing service",
                "parameters": [
                    {
                        "in": "path",
                        "name": "signing_service_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningServiceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/status/": {
            "get": {
                "operationId": "status_read",
                "description": "Returns status and app information about Pulp.\n\nInformation includes:\n * version of pulpcore and loaded pulp plugins\n * known workers\n * known content apps\n * database connection status\n * redis connection status\n * disk usage information",
                "summary": "Inspect status of Pulp",
                "tags": [
                    "Status"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/task-groups/": {
            "get": {
                "operationId": "task_groups_list",
                "summary": "List task groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskGroupResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_group_href}": {
            "get": {
                "operationId": "task_groups_read",
                "summary": "Inspect a task group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "task_groups_cancel",
                "description": "This operation cancels a task group.",
                "summary": "Cancel a task group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/task-schedules/": {
            "get": {
                "operationId": "task_schedules_list",
                "description": "ViewSet to monitor task schedules.",
                "summary": "List task schedules",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-dispatch_interval",
                                    "-name",
                                    "-next_dispatch",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-task_name",
                                    "dispatch_interval",
                                    "name",
                                    "next_dispatch",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "task_name"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `next_dispatch` - Next dispatch\n* `-next_dispatch` - Next dispatch (descending)\n* `dispatch_interval` - Dispatch interval\n* `-dispatch_interval` - Dispatch interval (descending)\n* `task_name` - Task name\n* `-task_name` - Task name (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "task_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "task_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where task_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskScheduleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}": {
            "get": {
                "operationId": "task_schedules_read",
                "description": "ViewSet to monitor task schedules.",
                "summary": "Inspect a task schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskScheduleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}add_role/": {
            "post": {
                "operationId": "task_schedules_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}list_roles/": {
            "get": {
                "operationId": "task_schedules_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}my_permissions/": {
            "get": {
                "operationId": "task_schedules_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_schedule_href}remove_role/": {
            "post": {
                "operationId": "task_schedules_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_schedule_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Task-Schedules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/tasks/": {
            "get": {
                "operationId": "tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "child_tasks",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where child_tasks matches value"
                    },
                    {
                        "in": "query",
                        "name": "created_resources",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "exclusive_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "finished_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where finished_at has a null value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where finished_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "finished_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where finished_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "logging_cid",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid matches value"
                    },
                    {
                        "in": "query",
                        "name": "logging_cid__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where logging_cid contains value"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name not equal to value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-deferred",
                                    "-enc_args",
                                    "-enc_kwargs",
                                    "-error",
                                    "-finished_at",
                                    "-immediate",
                                    "-logging_cid",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-reserved_resources_record",
                                    "-started_at",
                                    "-state",
                                    "-unblocked_at",
                                    "-versions",
                                    "deferred",
                                    "enc_args",
                                    "enc_kwargs",
                                    "error",
                                    "finished_at",
                                    "immediate",
                                    "logging_cid",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "reserved_resources_record",
                                    "started_at",
                                    "state",
                                    "unblocked_at",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `state` - State\n* `-state` - State (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `logging_cid` - Logging cid\n* `-logging_cid` - Logging cid (descending)\n* `unblocked_at` - Unblocked at\n* `-unblocked_at` - Unblocked at (descending)\n* `started_at` - Started at\n* `-started_at` - Started at (descending)\n* `finished_at` - Finished at\n* `-finished_at` - Finished at (descending)\n* `error` - Error\n* `-error` - Error (descending)\n* `enc_args` - Enc args\n* `-enc_args` - Enc args (descending)\n* `enc_kwargs` - Enc kwargs\n* `-enc_kwargs` - Enc kwargs (descending)\n* `reserved_resources_record` - Reserved resources record\n* `-reserved_resources_record` - Reserved resources record (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `immediate` - Immediate\n* `-immediate` - Immediate (descending)\n* `deferred` - Deferred\n* `-deferred` - Deferred (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "parent_task",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where parent_task matches value"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created matches value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where pulp_created has a null value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where pulp_created is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "pulp_created__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where pulp_created is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reserved_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "shared_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_resources__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "started_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where started_at has a null value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where started_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "started_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where started_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "canceled",
                                "canceling",
                                "completed",
                                "failed",
                                "running",
                                "skipped",
                                "waiting"
                            ]
                        },
                        "description": "Filter results where state matches value\n\n* `waiting` - Waiting\n* `skipped` - Skipped\n* `running` - Running\n* `completed` - Completed\n* `failed` - Failed\n* `canceled` - Canceled\n* `canceling` - Canceling"
                    },
                    {
                        "in": "query",
                        "name": "state__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where state is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "state__ne",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where state not equal to value"
                    },
                    {
                        "in": "query",
                        "name": "task_group",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where task_group matches value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where unblocked_at matches value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where unblocked_at is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where unblocked_at is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where unblocked_at has a null value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where unblocked_at is less than value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where unblocked_at is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "unblocked_at__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where unblocked_at is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Filter results where worker matches value"
                    },
                    {
                        "in": "query",
                        "name": "worker__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Filter results where worker is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "worker__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where worker has a null value"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}": {
            "get": {
                "operationId": "tasks_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tasks_cancel",
                "description": "This operation cancels a task.",
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "tasks_delete",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Delete a task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{task_href}add_role/": {
            "post": {
                "operationId": "tasks_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}list_roles/": {
            "get": {
                "operationId": "tasks_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}my_permissions/": {
            "get": {
                "operationId": "tasks_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}profile_artifacts/": {
            "get": {
                "operationId": "tasks_profile_artifacts",
                "description": "Return pre-signed URLs used for downloading raw profile artifacts.",
                "summary": "Fetch downloadable links for profile artifacts",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}remove_role/": {
            "post": {
                "operationId": "tasks_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/tasks/purge/": {
            "post": {
                "operationId": "tasks_purge",
                "description": "Trigger an asynchronous task that deletes completed tasks that finished prior to a specified timestamp.",
                "summary": "Purge Completed Tasks",
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Purge"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/uploads/": {
            "get": {
                "operationId": "uploads_list",
                "description": "View for chunked uploads.",
                "summary": "List uploads",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-size",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "size"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `size` - Size\n* `-size` - Size (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size matches value"
                    },
                    {
                        "in": "query",
                        "name": "size__gt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "size__lt",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Filter results where size is less than value"
                    },
                    {
                        "in": "query",
                        "name": "size__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "description": "Filter results where size is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUploadResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "uploads_create",
                "description": "View for chunked uploads.",
                "summary": "Create an upload",
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}": {
            "get": {
                "operationId": "uploads_read",
                "description": "View for chunked uploads.",
                "summary": "Inspect an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "uploads_update",
                "description": "Upload a chunk for an upload.",
                "summary": "Upload a file chunk",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Content-Range",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Content-Range header specifies the location of the file chunk within the file.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "uploads_delete",
                "description": "View for chunked uploads.",
                "summary": "Delete an upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upload_href}add_role/": {
            "post": {
                "operationId": "uploads_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}commit/": {
            "post": {
                "operationId": "uploads_commit",
                "description": "Queues a Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.",
                "summary": "Finish an Upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}list_roles/": {
            "get": {
                "operationId": "uploads_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}my_permissions/": {
            "get": {
                "operationId": "uploads_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}remove_role/": {
            "post": {
                "operationId": "uploads_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/upstream-pulps/": {
            "get": {
                "operationId": "upstream_pulps_list",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "List upstream pulps",
                "parameters": [
                    {
                        "in": "query",
                        "name": "base_url",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url contains value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url matches value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where base_url is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "base_url__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url starts with value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "base_url__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where base_url starts with value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_replication matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_replication is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_replication is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where last_replication has a null value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_replication is less than value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_replication is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_replication__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where last_replication is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-api_root",
                                    "-base_url",
                                    "-ca_cert",
                                    "-client_cert",
                                    "-client_key",
                                    "-domain",
                                    "-last_replication",
                                    "-name",
                                    "-password",
                                    "-pk",
                                    "-policy",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-q_select",
                                    "-tls_validation",
                                    "-username",
                                    "api_root",
                                    "base_url",
                                    "ca_cert",
                                    "client_cert",
                                    "client_key",
                                    "domain",
                                    "last_replication",
                                    "name",
                                    "password",
                                    "pk",
                                    "policy",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "q_select",
                                    "tls_validation",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `base_url` - Base url\n* `-base_url` - Base url (descending)\n* `api_root` - Api root\n* `-api_root` - Api root (descending)\n* `domain` - Domain\n* `-domain` - Domain (descending)\n* `ca_cert` - Ca cert\n* `-ca_cert` - Ca cert (descending)\n* `client_cert` - Client cert\n* `-client_cert` - Client cert (descending)\n* `client_key` - Client key\n* `-client_key` - Client key (descending)\n* `tls_validation` - Tls validation\n* `-tls_validation` - Tls validation (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `q_select` - Q select\n* `-q_select` - Q select (descending)\n* `policy` - Policy\n* `-policy` - Policy (descending)\n* `last_replication` - Last replication\n* `-last_replication` - Last replication (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUpstreamPulpResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "upstream_pulps_create",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Create an upstream pulp",
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}": {
            "get": {
                "operationId": "upstream_pulps_read",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Inspect an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "upstream_pulps_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "upstream_pulps_partial_update",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Update an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpstreamPulp"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpstreamPulpResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "upstream_pulps_delete",
                "description": "API for configuring an upstream Pulp to replicate. This API is provided as a tech preview.",
                "summary": "Delete an upstream pulp",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upstream_pulp_href}add_role/": {
            "post": {
                "operationId": "upstream_pulps_add_role",
                "description": "Add a role for this object to users/groups.",
                "summary": "Add a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}list_roles/": {
            "get": {
                "operationId": "upstream_pulps_list_roles",
                "description": "List roles assigned to this object.",
                "summary": "List roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectRolesResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}my_permissions/": {
            "get": {
                "operationId": "upstream_pulps_my_permissions",
                "description": "List permissions available to the current user on this object.",
                "summary": "List user permissions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissionsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}remove_role/": {
            "post": {
                "operationId": "upstream_pulps_remove_role",
                "description": "Remove a role for this object from users/groups.",
                "summary": "Remove a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/NestedRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NestedRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upstream_pulp_href}replicate/": {
            "post": {
                "operationId": "upstream_pulps_replicate",
                "description": "Trigger an asynchronous repository replication task group. This API is provided as a tech preview.",
                "summary": "Replicate",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upstream_pulp_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Upstream-Pulps"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/users/": {
            "get": {
                "operationId": "users_list",
                "description": "ViewSet for User.",
                "summary": "List users",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email contains value"
                    },
                    {
                        "in": "query",
                        "name": "email__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where email matches value"
                    },
                    {
                        "in": "query",
                        "name": "email__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where email is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where first_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "first_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where first_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_active matches value"
                    },
                    {
                        "in": "query",
                        "name": "is_staff",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where is_staff matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name contains value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where last_name matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where last_name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-date_joined",
                                    "-email",
                                    "-first_name",
                                    "-id",
                                    "-is_active",
                                    "-is_staff",
                                    "-is_superuser",
                                    "-last_login",
                                    "-last_name",
                                    "-password",
                                    "-pk",
                                    "-username",
                                    "date_joined",
                                    "email",
                                    "first_name",
                                    "id",
                                    "is_active",
                                    "is_staff",
                                    "is_superuser",
                                    "last_login",
                                    "last_name",
                                    "password",
                                    "pk",
                                    "username"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `id` - Id\n* `-id` - Id (descending)\n* `password` - Password\n* `-password` - Password (descending)\n* `last_login` - Last login\n* `-last_login` - Last login (descending)\n* `is_superuser` - Is superuser\n* `-is_superuser` - Is superuser (descending)\n* `username` - Username\n* `-username` - Username (descending)\n* `first_name` - First name\n* `-first_name` - First name (descending)\n* `last_name` - Last name\n* `-last_name` - Last name (descending)\n* `email` - Email\n* `-email` - Email (descending)\n* `is_staff` - Is staff\n* `-is_staff` - Is staff (descending)\n* `is_active` - Is active\n* `-is_active` - Is active (descending)\n* `date_joined` - Date joined\n* `-date_joined` - Date joined (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "username",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username contains value"
                    },
                    {
                        "in": "query",
                        "name": "username__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where username matches value"
                    },
                    {
                        "in": "query",
                        "name": "username__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where username is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_create",
                "description": "ViewSet for User.",
                "summary": "Create an user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{auth_user_href}": {
            "get": {
                "operationId": "users_read",
                "description": "ViewSet for User.",
                "summary": "Inspect an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "users_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "ViewSet for User.",
                "summary": "Update an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_delete",
                "description": "ViewSet for User.",
                "summary": "Delete an user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{auth_user_href}roles/": {
            "get": {
                "operationId": "users_roles_list",
                "description": "ViewSet for UserRole.",
                "summary": "List user roles",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "content_object",
                        "schema": {
                            "type": "string"
                        },
                        "description": "content_object"
                    },
                    {
                        "in": "query",
                        "name": "domain",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Foreign Key referenced by HREF"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-description",
                                    "-pk",
                                    "-pulp_created",
                                    "-role",
                                    "description",
                                    "pk",
                                    "pulp_created",
                                    "role"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `role` - Role\n* `-role` - Role (descending)\n* `description` - Description\n* `-description` - Description (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "role__startswith",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "users_roles_create",
                "description": "ViewSet for UserRole.",
                "summary": "Create an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_user_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{auth_users_user_role_href}": {
            "get": {
                "operationId": "users_roles_read",
                "description": "ViewSet for UserRole.",
                "summary": "Inspect an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "users_roles_delete",
                "description": "ViewSet for UserRole.",
                "summary": "Delete an user role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "auth_users_user_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Users: Roles"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/workers/": {
            "get": {
                "operationId": "workers_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "List workers",
                "parameters": [
                    {
                        "in": "query",
                        "name": "last_heartbeat",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat matches value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__gte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is greater than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__isnull",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter results where last_heartbeat has a null value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lt",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__lte",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "Filter results where last_heartbeat is less than or equal to value"
                    },
                    {
                        "in": "query",
                        "name": "last_heartbeat__range",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "description": "Filter results where last_heartbeat is between two comma separated values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "missing",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__contains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__icontains",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name contains value"
                    },
                    {
                        "in": "query",
                        "name": "name__iexact",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches value"
                    },
                    {
                        "in": "query",
                        "name": "name__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Filter results where name is in a comma-separated list of values",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name__iregex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__istartswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "in": "query",
                        "name": "name__regex",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name matches regex value"
                    },
                    {
                        "in": "query",
                        "name": "name__startswith",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results where name starts with value"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "online",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ordering",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-last_heartbeat",
                                    "-name",
                                    "-pk",
                                    "-pulp_created",
                                    "-pulp_id",
                                    "-pulp_last_updated",
                                    "-versions",
                                    "last_heartbeat",
                                    "name",
                                    "pk",
                                    "pulp_created",
                                    "pulp_id",
                                    "pulp_last_updated",
                                    "versions"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `pulp_id` - Pulp id\n* `-pulp_id` - Pulp id (descending)\n* `pulp_created` - Pulp created\n* `-pulp_created` - Pulp created (descending)\n* `pulp_last_updated` - Pulp last updated\n* `-pulp_last_updated` - Pulp last updated (descending)\n* `name` - Name\n* `-name` - Name (descending)\n* `last_heartbeat` - Last heartbeat\n* `-last_heartbeat` - Last heartbeat (descending)\n* `versions` - Versions\n* `-versions` - Versions (descending)\n* `pk` - Pk\n* `-pk` - Pk (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "prn__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_href__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "pulp_id__in",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "q",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter results by using NOT, AND and OR operations on other filters"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkerResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{worker_href}": {
            "get": {
                "operationId": "workers_read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "summary": "Inspect a worker",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worker_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "basicAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "AccessPolicyResponse": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "viewset_name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of ViewSet this AccessPolicy authorizes."
                    },
                    "customized": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the AccessPolicy has been user-modified. False otherwise."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                },
                "required": [
                    "statements"
                ]
            },
            "ApiAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "Artifact": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ArtifactDistributionResponse": {
                "type": "object",
                "description": "A serializer for ArtifactDistribution.",
                "properties": {
                    "no_content_change_since": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ArtifactResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "file": {
                        "type": "string",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "CompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CompositeContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentAppStatusResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    }
                }
            },
            "ContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentRedirectContentGuardResponse": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ContentSettingsResponse": {
                "type": "object",
                "description": "Serializer for information about content-app-settings for the pulp instance",
                "properties": {
                    "content_origin": {
                        "type": "string",
                        "nullable": true,
                        "description": "The CONTENT_ORIGIN setting for this Pulp instance"
                    },
                    "content_path_prefix": {
                        "type": "string",
                        "description": "The CONTENT_PATH_PREFIX setting for this Pulp instance"
                    }
                },
                "required": [
                    "content_path_prefix"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "removed": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "present": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "DatabaseConnectionResponse": {
                "type": "object",
                "description": "Serializer for the database connection information",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to the database"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "DistributionResponse": {
                "type": "object",
                "description": "The Serializer for the Distribution model.\n\nThe serializer deliberately omits the `publication` and `repository_version` field due to\nplugins typically requiring one or the other but not both.\n\nTo include the ``publication`` field, it is recommended plugins define the field::\n\n  publication = DetailRelatedField(\n      required=False,\n      help_text=_(\"Publication to be served\"),\n      view_name_pattern=r\"publications(-.*/.*)?-detail\",\n      queryset=models.Publication.objects.exclude(complete=False),\n      allow_null=True,\n  )\n\nTo include the ``repository_version`` field, it is recommended plugins define the field::\n\n  repository_version = RepositoryVersionRelatedField(\n      required=False, help_text=_(\"RepositoryVersion to be served\"), allow_null=True\n  )\n\nAdditionally, the serializer omits the ``remote`` field, which is used for pull-through caching\nfeature and only by plugins which use publications. Plugins implementing a pull-through caching\nshould define the field in their derived serializer class like this::\n\n  remote = DetailRelatedField(\n      required=False,\n      help_text=_('Remote that can be used to fetch content when using pull-through caching.'),\n      queryset=models.Remote.objects.all(),\n      allow_null=True\n  )",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "no_content_change_since": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "Domain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "DomainBackendMigrator": {
                "type": "object",
                "description": "Special serializer for performing a storage backend migration on a Domain.",
                "properties": {
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "The new backend storage class to migrate to.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "The settings for the new storage class to migrate to."
                    }
                },
                "required": [
                    "storage_class",
                    "storage_settings"
                ]
            },
            "DomainResponse": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                },
                "required": [
                    "name",
                    "storage_class",
                    "storage_settings"
                ]
            },
            "EvaluationResponse": {
                "type": "object",
                "description": "Results from evaluating a proposed parameter to a PulpImport call.",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Parameter value being evaluated."
                    },
                    "is_valid": {
                        "type": "boolean",
                        "description": "True if evaluation passed, false otherwise."
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Messages describing results of all evaluations done. May be an empty list."
                    }
                },
                "required": [
                    "context",
                    "is_valid",
                    "messages"
                ]
            },
            "FilesystemExport": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the publication to be exported."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of the repository version export."
                    },
                    "start_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "The URI of the last-exported-repo-version."
                    }
                }
            },
            "FilesystemExportResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    }
                }
            },
            "FilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "FilesystemExporterResponse": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "GenericRemoteResponse": {
                "type": "object",
                "description": "Every remote defined by a plugin should have a Remote serializer that inherits from this\nclass. Please import from `pulpcore.plugin.serializers` rather than from this module directly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://host:port"
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of simultaneous connections. If not set then the default value will be used.",
                        "minimum": 1
                    },
                    "max_retries": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Maximum number of retry attempts after a download failure. If not set then the default value (3) will be used."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GenericRemoteResponsePolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content.\n\n* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
                    },
                    "total_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.total (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_connect_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "sock_read_timeout": {
                        "type": "number",
                        "format": "double",
                        "minimum": 0.0,
                        "nullable": true,
                        "description": "aiohttp.ClientTimeout.sock_read (q.v.) for download-connections. The default is null, which will cause the default from the aiohttp library to be used."
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Headers for aiohttp.Clientsession"
                    },
                    "rate_limit": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Limits requests per second for each concurrent downloader"
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "GenericRemoteResponsePolicyEnum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string",
                "description": "* `immediate` - When syncing, download all metadata and content now.\n* `on_demand` - When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.\n* `streamed` - When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again."
            },
            "Group": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the group progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of group progress report'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the group progress report."
                    }
                }
            },
            "GroupResponse": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GroupRole": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupRoleResponse": {
                "type": "object",
                "description": "Serializer for GroupRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on the model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "GroupUser": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "username"
                ]
            },
            "GroupUserResponse": {
                "type": "object",
                "description": "Serializer for Users that belong to a Group.",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "username"
                ]
            },
            "HeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "HeaderContentGuardResponse": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                },
                "required": [
                    "header_name",
                    "header_value",
                    "name"
                ]
            },
            "ImportResponse": {
                "type": "object",
                "description": "Serializer for Imports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the Task that ran the Import."
                    },
                    "params": {
                        "type": "object",
                        "description": "Any parameters that were used to create the import."
                    }
                },
                "required": [
                    "params",
                    "task"
                ]
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "MethodEnum": {
                "enum": [
                    "write",
                    "hardlink",
                    "symlink"
                ],
                "type": "string",
                "description": "* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
            },
            "MinimalTaskResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'."
                    },
                    "unblocked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task was identified ready for pickup."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task stopped execution."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "MultipleArtifactContentResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A dict mapping relative paths inside the Content to the correspondingArtifact URLs. E.g.: {'relative/path': '/artifacts/1/'"
                    }
                },
                "required": [
                    "artifacts"
                ]
            },
            "MyPermissionsResponse": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "NestedOpenPGPPublicSubkey": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 64
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "created",
                    "fingerprint"
                ]
            },
            "NestedOpenPGPPublicSubkeyResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "fingerprint": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "fingerprint"
                ]
            },
            "NestedOpenPGPSignature": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "maxLength": 16
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "signers_user_id": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1
                    },
                    "key_expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "expired": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "created",
                    "expired"
                ]
            },
            "NestedOpenPGPSignatureResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 16
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "signers_user_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "key_expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "expired": {
                        "type": "boolean"
                    },
                    "key_expired": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "expired"
                ]
            },
            "NestedOpenPGPUserAttribute": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 128
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "NestedOpenPGPUserAttributeResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "NestedOpenPGPUserID": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "NestedOpenPGPUserIDResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "NestedRole": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "role"
                ]
            },
            "NestedRoleResponse": {
                "type": "object",
                "description": "Serializer to add/remove object roles to/from users/groups.\n\nThis is used in conjunction with ``pulpcore.app.viewsets.base.RolesMixin`` and requires the\nunderlying object to be passed as ``content_object`` in the context.",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
                        },
                        "default": []
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "required": [
                    "role"
                ]
            },
            "ObjectRolesResponse": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedRoleResponse"
                        }
                    }
                },
                "required": [
                    "roles"
                ]
            },
            "OpenPGPDistribution": {
                "type": "object",
                "description": "The Serializer for the Distribution model.\n\nThe serializer deliberately omits the `publication` and `repository_version` field due to\nplugins typically requiring one or the other but not both.\n\nTo include the ``publication`` field, it is recommended plugins define the field::\n\n  publication = DetailRelatedField(\n      required=False,\n      help_text=_(\"Publication to be served\"),\n      view_name_pattern=r\"publications(-.*/.*)?-detail\",\n      queryset=models.Publication.objects.exclude(complete=False),\n      allow_null=True,\n  )\n\nTo include the ``repository_version`` field, it is recommended plugins define the field::\n\n  repository_version = RepositoryVersionRelatedField(\n      required=False, help_text=_(\"RepositoryVersion to be served\"), allow_null=True\n  )\n\nAdditionally, the serializer omits the ``remote`` field, which is used for pull-through caching\nfeature and only by plugins which use publications. Plugins implementing a pull-through caching\nshould define the field in their derived serializer class like this::\n\n  remote = DetailRelatedField(\n      required=False,\n      help_text=_('Remote that can be used to fetch content when using pull-through caching.'),\n      queryset=models.Remote.objects.all(),\n      allow_null=True\n  )",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "OpenPGPDistributionResponse": {
                "type": "object",
                "description": "The Serializer for the Distribution model.\n\nThe serializer deliberately omits the `publication` and `repository_version` field due to\nplugins typically requiring one or the other but not both.\n\nTo include the ``publication`` field, it is recommended plugins define the field::\n\n  publication = DetailRelatedField(\n      required=False,\n      help_text=_(\"Publication to be served\"),\n      view_name_pattern=r\"publications(-.*/.*)?-detail\",\n      queryset=models.Publication.objects.exclude(complete=False),\n      allow_null=True,\n  )\n\nTo include the ``repository_version`` field, it is recommended plugins define the field::\n\n  repository_version = RepositoryVersionRelatedField(\n      required=False, help_text=_(\"RepositoryVersion to be served\"), allow_null=True\n  )\n\nAdditionally, the serializer omits the ``remote`` field, which is used for pull-through caching\nfeature and only by plugins which use publications. Plugins implementing a pull-through caching\nshould define the field in their derived serializer class like this::\n\n  remote = DetailRelatedField(\n      required=False,\n      help_text=_('Remote that can be used to fetch content when using pull-through caching.'),\n      queryset=models.Remote.objects.all(),\n      allow_null=True\n  )",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "no_content_change_since": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Timestamp since when the distributed content served by this distribution has not changed. If equals to `null`, no guarantee is provided about content changes."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "OpenPGPKeyring": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "OpenPGPKeyringResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "OpenPGPPublicKey": {
                "type": "object",
                "description": "A serializer for content types with no Artifact.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the content unit."
                    },
                    "upload": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "An uncommitted upload that may be turned into the content unit."
                    },
                    "file_url": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "A url that Pulp can download and turn into the content unit."
                    }
                }
            },
            "OpenPGPPublicKeyResponse": {
                "type": "object",
                "description": "A serializer for content types with no Artifact.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "fingerprint": {
                        "type": "string",
                        "readOnly": true,
                        "maxLength": 64
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPUserIDResponse"
                        },
                        "readOnly": true
                    },
                    "user_attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPUserAttributeResponse"
                        },
                        "readOnly": true
                    },
                    "public_subkeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPPublicSubkeyResponse"
                        },
                        "readOnly": true
                    }
                }
            },
            "OpenPGPPublicSubkeyResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "fingerprint": {
                        "type": "string",
                        "maxLength": 64
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    },
                    "public_key": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "fingerprint"
                ]
            },
            "OpenPGPSignatureResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "issuer": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 16
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "signers_user_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "key_expiration_time": {
                        "type": "string",
                        "nullable": true
                    },
                    "expired": {
                        "type": "boolean"
                    },
                    "key_expired": {
                        "type": "string",
                        "readOnly": true
                    },
                    "signed_content": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "expired"
                ]
            },
            "OpenPGPUserAttributeResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "sha256": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    },
                    "public_key": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "OpenPGPUserIDResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "A dictionary of arbitrary key/value pairs used to describe a specific Content instance."
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "signatures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestedOpenPGPSignatureResponse"
                        },
                        "readOnly": true
                    },
                    "public_key": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "OrphansCleanup": {
                "type": "object",
                "properties": {
                    "content_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will delete specified content and associated Artifacts if they are orphans."
                    },
                    "orphan_protection_time": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "The time in minutes for how long Pulp will hold orphan Content and Artifacts before they become candidates for deletion by this orphan cleanup task. This should ideally be longer than your longest running task otherwise any content created during that task could be cleaned up before the task finishes. If not specified, a default value is taken from the setting ORPHAN_PROTECTION_TIME.",
                        "maximum": 4294967295,
                        "minimum": 0
                    }
                }
            },
            "PaginatedAccessPolicyResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccessPolicyResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactDistributionResponse"
                        }
                    }
                }
            },
            "PaginatedArtifactResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ArtifactResponse"
                        }
                    }
                }
            },
            "PaginatedCompositeContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompositeContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedContentRedirectContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentRedirectContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DistributionResponse"
                        }
                    }
                }
            },
            "PaginatedDomainResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExportResponse"
                        }
                    }
                }
            },
            "PaginatedFilesystemExporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FilesystemExporterResponse"
                        }
                    }
                }
            },
            "PaginatedGenericRemoteResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GenericRemoteResponse"
                        }
                    }
                }
            },
            "PaginatedGroupResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        }
                    }
                }
            },
            "PaginatedGroupRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGroupUserResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        }
                    }
                }
            },
            "PaginatedHeaderContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HeaderContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedImportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportResponse"
                        }
                    }
                }
            },
            "PaginatedMultipleArtifactContentResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipleArtifactContentResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPDistributionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPDistributionResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPKeyringResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPKeyringResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPPublicKeyResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPPublicKeyResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPPublicSubkeyResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPPublicSubkeyResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPSignatureResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPSignatureResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPUserAttributeResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPUserAttributeResponse"
                        }
                    }
                }
            },
            "PaginatedOpenPGPUserIDResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OpenPGPUserIDResponse"
                        }
                    }
                }
            },
            "PaginatedPublicationResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicationResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExportResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExportResponse"
                        }
                    }
                }
            },
            "PaginatedPulpExporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpExporterResponse"
                        }
                    }
                }
            },
            "PaginatedPulpImporterResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PulpImporterResponse"
                        }
                    }
                }
            },
            "PaginatedRBACContentGuardResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RBACContentGuardResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "PaginatedRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RoleResponse"
                        }
                    }
                }
            },
            "PaginatedSigningServiceResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SigningServiceResponse"
                        }
                    }
                }
            },
            "PaginatedTaskGroupResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskGroupResponse"
                        }
                    }
                }
            },
            "PaginatedTaskResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResponse"
                        }
                    }
                }
            },
            "PaginatedTaskScheduleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskScheduleResponse"
                        }
                    }
                }
            },
            "PaginatedUploadResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadResponse"
                        }
                    }
                }
            },
            "PaginatedUpstreamPulpResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpstreamPulpResponse"
                        }
                    }
                }
            },
            "PaginatedUserResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    }
                }
            },
            "PaginatedUserRoleResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRoleResponse"
                        }
                    }
                }
            },
            "PaginatedWorkerResponseList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        }
                    }
                }
            },
            "PatchedAccessPolicy": {
                "type": "object",
                "description": "Serializer for AccessPolicy.",
                "properties": {
                    "permissions_assignment": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that define the new permissions to be created for new objects.This is deprecated. Use `creation_hooks` instead."
                    },
                    "creation_hooks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of callables that may associate user roles for new objects."
                    },
                    "statements": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of policy statements defining the policy."
                    },
                    "queryset_scoping": {
                        "type": "object",
                        "description": "A callable for performing queryset scoping. See plugin documentation for valid callables. Set to blank to turn off queryset scoping."
                    }
                }
            },
            "PatchedCompositeContentGuard": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "guards": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                        },
                        "description": "List of ContentGuards to ask for access-permission."
                    }
                }
            },
            "PatchedContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedDomain": {
                "type": "object",
                "description": "Serializer for Domain.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A name for this domain.",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "storage_class": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageClassEnum"
                            }
                        ],
                        "description": "Backend storage class for domain.\n\n* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
                    },
                    "storage_settings": {
                        "type": "object",
                        "description": "Settings for storage class."
                    },
                    "redirect_to_object_storage": {
                        "type": "boolean",
                        "default": true,
                        "description": "Boolean to have the content app redirect to object storage."
                    },
                    "hide_guarded_distributions": {
                        "type": "boolean",
                        "default": false,
                        "description": "Boolean to hide distributions with a content guard in the content app."
                    }
                }
            },
            "PatchedFilesystemExporter": {
                "type": "object",
                "description": "Serializer for FilesystemExporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system location to export to."
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "default": "write",
                        "description": "Method of exporting\n\n* `write` - Export by writing\n* `hardlink` - Export by hardlinking\n* `symlink` - Export by symlinking"
                    }
                }
            },
            "PatchedGroup": {
                "type": "object",
                "description": "Serializer for Group.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name",
                        "maxLength": 150
                    }
                }
            },
            "PatchedHeaderContentGuard": {
                "type": "object",
                "description": "A serializer for HeaderContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "header_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The header name the guard will check on."
                    },
                    "header_value": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The value that will authorize the request."
                    },
                    "jq_filter": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A JQ syntax compatible filter. If jq_filter is not set, then the value willonly be Base64 decoded and checked as an explicit string match."
                    }
                }
            },
            "PatchedOpenPGPDistribution": {
                "type": "object",
                "description": "The Serializer for the Distribution model.\n\nThe serializer deliberately omits the `publication` and `repository_version` field due to\nplugins typically requiring one or the other but not both.\n\nTo include the ``publication`` field, it is recommended plugins define the field::\n\n  publication = DetailRelatedField(\n      required=False,\n      help_text=_(\"Publication to be served\"),\n      view_name_pattern=r\"publications(-.*/.*)?-detail\",\n      queryset=models.Publication.objects.exclude(complete=False),\n      allow_null=True,\n  )\n\nTo include the ``repository_version`` field, it is recommended plugins define the field::\n\n  repository_version = RepositoryVersionRelatedField(\n      required=False, help_text=_(\"RepositoryVersion to be served\"), allow_null=True\n  )\n\nAdditionally, the serializer omits the ``remote`` field, which is used for pull-through caching\nfeature and only by plugins which use publications. Plugins implementing a pull-through caching\nshould define the field in their derived serializer class like this::\n\n  remote = DetailRelatedField(\n      required=False,\n      help_text=_('Remote that can be used to fetch content when using pull-through caching.'),\n      queryset=models.Remote.objects.all(),\n      allow_null=True\n  )",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "hidden": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this distribution should be shown in the content app."
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                }
            },
            "PatchedOpenPGPKeyring": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                }
            },
            "PatchedPulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                }
            },
            "PatchedPulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PatchedRBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                }
            },
            "PatchedRole": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                }
            },
            "PatchedTaskCancel": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The desired state of the task. Only 'canceled' is accepted."
                    }
                }
            },
            "PatchedUpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "q_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "Filter distributions on the upstream Pulp using complex filtering. E.g. pulp_label_select=\"foo\" OR pulp_label_select=\"key=val\""
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy357Enum"
                            }
                        ],
                        "description": "Policy for how replicate will manage the local objects within the domain.\n\n* `all` - Replicate manages ALL local objects within the domain.\n* `labeled` - Replicate will only manage the objects created from a previous replication, unlabled local objects will be untouched.\n* `nodelete` - Replicate will not delete any local object whether they were created by replication or not."
                    }
                }
            },
            "PatchedUser": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Users password. Set to ``null`` to disable password authentication."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    }
                }
            },
            "Policy357Enum": {
                "enum": [
                    "all",
                    "labeled",
                    "nodelete"
                ],
                "type": "string",
                "description": "* `all` - Replicate manages ALL local objects within the domain.\n* `labeled` - Replicate will only manage the objects created from a previous replication, unlabled local objects will be untouched.\n* `nodelete` - Replicate will not delete any local object whether they were created by replication or not."
            },
            "ProfileArtifactResponse": {
                "type": "object",
                "properties": {
                    "urls": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                },
                "required": [
                    "urls"
                ]
            },
            "ProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of progress report'."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'. The default is 'waiting'."
                    },
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the progress report."
                    }
                }
            },
            "PublicationResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    }
                }
            },
            "PulpExport": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "full": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": true,
                        "description": "Do a Full (true) or Incremental (false) export."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "Generate report on what would be exported and disk-space required."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit repo-version hrefs to export (replaces current_version)."
                    },
                    "chunk_size": {
                        "type": "string",
                        "writeOnly": true,
                        "minLength": 1,
                        "description": "Chunk export-tarfile into pieces of chunk_size bytes. Recognizes units of B/KB/MB/GB/TB. A chunk has a maximum size of 1TB."
                    },
                    "start_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit last-exported-repo-version hrefs (replaces last_export)."
                    }
                }
            },
            "PulpExportResponse": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    },
                    "output_file_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Dictionary of filename: sha256hash entries for export-output-file(s)"
                    },
                    "toc_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Filename and sha256-checksum of table-of-contents for this export"
                    }
                }
            },
            "PulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpExporterResponse": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpImport": {
                "type": "object",
                "description": "Serializer for call to import into Pulp.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "create_repositories": {
                        "type": "boolean",
                        "default": false,
                        "description": "If True, missing repositories will be automatically created during the import."
                    }
                }
            },
            "PulpImportCheck": {
                "type": "object",
                "description": "Check validity of provided import-options.\n\nProvides the ability to check that an import is 'sane' without having to actually\ncreate an importer.",
                "properties": {
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to export-tar-gz that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    },
                    "repo_mapping": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PulpImportCheckResponse": {
                "type": "object",
                "description": "Return the response to a PulpImport import-check call.",
                "properties": {
                    "toc": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'toc' file for PulpImport"
                    },
                    "path": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'path' file for PulpImport"
                    },
                    "repo_mapping": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EvaluationResponse"
                            }
                        ],
                        "description": "Evaluation of proposed 'repo_mapping' file for PulpImport"
                    }
                }
            },
            "PulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PulpImporterResponse": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "Purge": {
                "type": "object",
                "properties": {
                    "finished_before": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2025-03-21",
                        "description": "Purge tasks completed earlier than this timestamp. Format '%Y-%m-%d[T%H:%M:%S]'"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StatesEnum"
                        },
                        "default": [
                            "completed"
                        ],
                        "description": "List of task-states to be purged. Only 'final' states are allowed."
                    }
                }
            },
            "RBACContentGuard": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RBACContentGuardResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupUserResponse"
                        },
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ReclaimSpace": {
                "type": "object",
                "description": "Serializer for reclaim disk space operation.",
                "properties": {
                    "repo_hrefs": {
                        "type": "array",
                        "items": {},
                        "description": "Will reclaim space for the specified list of repos. Use ['*'] to specify all repos."
                    },
                    "repo_versions_keeplist": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Will exclude repo versions from space reclaim."
                    }
                },
                "required": [
                    "repo_hrefs"
                ]
            },
            "RedisConnectionResponse": {
                "type": "object",
                "description": "Serializer for information about the Redis connection",
                "properties": {
                    "connected": {
                        "type": "boolean",
                        "description": "Info about whether the app can connect to Redis"
                    }
                },
                "required": [
                    "connected"
                ]
            },
            "Repair": {
                "type": "object",
                "properties": {
                    "verify_checksums": {
                        "type": "boolean",
                        "default": true,
                        "description": "Will verify that the checksum of all stored files matches what saved in the database. Otherwise only the existence of the files will be checked. Enabled by default"
                    }
                }
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositoryResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "retain_repo_versions": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Retain X versions of the repository. Default is null which retains all versions.",
                        "minimum": 1
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional remote to use by default when syncing."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "number": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "Role": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "RoleResponse": {
                "type": "object",
                "description": "Serializer for Role.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this role."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of permissions defining the role."
                    },
                    "locked": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "True if the role is system managed."
                    }
                },
                "required": [
                    "name",
                    "permissions"
                ]
            },
            "SetLabel": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously setting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "key",
                    "value"
                ]
            },
            "SigningServiceResponse": {
                "type": "object",
                "description": "A serializer for the model declaring a signing service.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name used to recognize a script."
                    },
                    "public_key": {
                        "type": "string",
                        "description": "The value of a public key used for the repository verification."
                    },
                    "pubkey_fingerprint": {
                        "type": "string",
                        "description": "The fingerprint of the public key."
                    },
                    "script": {
                        "type": "string",
                        "description": "An absolute path to a script which is going to be used for the signing."
                    }
                },
                "required": [
                    "name",
                    "pubkey_fingerprint",
                    "public_key",
                    "script"
                ]
            },
            "StatesEnum": {
                "enum": [
                    "skipped",
                    "completed",
                    "failed",
                    "canceled"
                ],
                "type": "string",
                "description": "* `skipped` - skipped\n* `completed` - completed\n* `failed` - failed\n* `canceled` - canceled"
            },
            "StatusResponse": {
                "type": "object",
                "description": "Serializer for the status information of the app",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionResponse"
                        },
                        "description": "Version information of Pulp components"
                    },
                    "online_workers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkerResponse"
                        },
                        "description": "List of online workers known to the application. An online worker is actively heartbeating and can respond to new work."
                    },
                    "online_api_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApiAppStatusResponse"
                        },
                        "description": "List of online api apps known to the application. An online api app is actively heartbeating and can serve the rest api to clients."
                    },
                    "online_content_apps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContentAppStatusResponse"
                        },
                        "description": "List of online content apps known to the application. An online content app is actively heartbeating and can serve data to clients."
                    },
                    "database_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DatabaseConnectionResponse"
                            }
                        ],
                        "description": "Database connection information"
                    },
                    "redis_connection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RedisConnectionResponse"
                            }
                        ],
                        "description": "Redis connection information"
                    },
                    "storage": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageResponse"
                            }
                        ],
                        "description": "Storage information"
                    },
                    "content_settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSettingsResponse"
                            }
                        ],
                        "description": "Content-app settings"
                    },
                    "domain_enabled": {
                        "type": "boolean",
                        "description": "Is Domains enabled"
                    }
                },
                "required": [
                    "content_settings",
                    "database_connection",
                    "domain_enabled",
                    "online_api_apps",
                    "online_content_apps",
                    "online_workers",
                    "versions"
                ]
            },
            "StorageClassEnum": {
                "enum": [
                    "pulpcore.app.models.storage.FileSystem",
                    "storages.backends.s3boto3.S3Boto3Storage",
                    "storages.backends.azure_storage.AzureStorage"
                ],
                "type": "string",
                "description": "* `pulpcore.app.models.storage.FileSystem` - Use local filesystem as storage\n* `storages.backends.s3boto3.S3Boto3Storage` - Use Amazon S3 as storage\n* `storages.backends.azure_storage.AzureStorage` - Use Azure Blob as storage"
            },
            "StorageResponse": {
                "type": "object",
                "description": "Serializer for information about the storage system",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Total number of bytes",
                        "minimum": 0
                    },
                    "used": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of bytes in use",
                        "minimum": 0
                    },
                    "free": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true,
                        "description": "Number of free bytes",
                        "minimum": 0
                    }
                },
                "required": [
                    "free",
                    "total",
                    "used"
                ]
            },
            "TaskGroupOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations that return a task group.",
                "properties": {
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task group."
                    }
                },
                "required": [
                    "task_group"
                ]
            },
            "TaskGroupResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the task group."
                    },
                    "all_tasks_dispatched": {
                        "type": "boolean",
                        "description": "Whether all tasks have been spawned for this task group."
                    },
                    "waiting": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'waiting' state"
                    },
                    "skipped": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'skipped' state"
                    },
                    "running": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'running' state"
                    },
                    "completed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'completed' state"
                    },
                    "canceled": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceled' state"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'failed' state"
                    },
                    "canceling": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceling' state"
                    },
                    "group_progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MinimalTaskResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "all_tasks_dispatched",
                    "description"
                ]
            },
            "TaskResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed', 'canceled' and 'canceling'."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "logging_cid": {
                        "type": "string",
                        "description": "The logging correlation id associated with this task"
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true,
                        "description": "User who dispatched this task."
                    },
                    "unblocked_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task was identified ready for pickup."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of when this task stopped execution."
                    },
                    "error": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON Object of a fatal error encountered during the execution of this task."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    },
                    "parent_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parent task that spawned this task."
                    },
                    "child_tasks": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Any tasks spawned by this task."
                    },
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task group that this task is a member of."
                    },
                    "progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "created_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources created by this task."
                    },
                    "reserved_resources_record": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "description": "A list of resources required by that task."
                    }
                },
                "required": [
                    "logging_cid",
                    "name"
                ]
            },
            "TaskScheduleResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the task schedule."
                    },
                    "task_name": {
                        "type": "string",
                        "description": "The name of the task to be scheduled."
                    },
                    "dispatch_interval": {
                        "type": "string",
                        "nullable": true,
                        "description": "Periodicity of the schedule."
                    },
                    "next_dispatch": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "Timestamp of the next time the task will be dispatched."
                    },
                    "last_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The last task dispatched by this schedule."
                    }
                },
                "required": [
                    "dispatch_interval",
                    "name",
                    "task_name"
                ]
            },
            "UnsetLabel": {
                "type": "object",
                "description": "Serializer for synchronously UNsetting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    }
                },
                "required": [
                    "key"
                ]
            },
            "UnsetLabelResponse": {
                "type": "object",
                "description": "Serializer for synchronously UNsetting a label.",
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "value": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            },
            "Upload": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadChunk": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "A chunk of the uploaded file."
                    },
                    "sha256": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The SHA-256 checksum of the chunk if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "UploadChunkResponse": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    }
                }
            },
            "UploadCommit": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The expected sha256 checksum for the file."
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "UploadDetailResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    },
                    "chunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadChunkResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UpstreamPulp": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "The password to be used for authentication when syncing. Extra leading and trailing whitespace characters are not trimmed."
                    },
                    "q_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "Filter distributions on the upstream Pulp using complex filtering. E.g. pulp_label_select=\"foo\" OR pulp_label_select=\"key=val\""
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy357Enum"
                            }
                        ],
                        "description": "Policy for how replicate will manage the local objects within the domain.\n\n* `all` - Replicate manages ALL local objects within the domain.\n* `labeled` - Replicate will only manage the objects created from a previous replication, unlabled local objects will be untouched.\n* `nodelete` - Replicate will not delete any local object whether they were created by replication or not."
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "UpstreamPulpResponse": {
                "type": "object",
                "description": "Serializer for a Server.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this Pulp server."
                    },
                    "base_url": {
                        "type": "string",
                        "description": "The transport, hostname, and an optional port of the Pulp server. e.g. https://example.com"
                    },
                    "api_root": {
                        "type": "string",
                        "description": "The API root. Defaults to '/pulp/'."
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true,
                        "description": "The domain of the Pulp server if enabled."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    },
                    "q_select": {
                        "type": "string",
                        "nullable": true,
                        "description": "Filter distributions on the upstream Pulp using complex filtering. E.g. pulp_label_select=\"foo\" OR pulp_label_select=\"key=val\""
                    },
                    "last_replication": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last replication that occurred. Equals to 'null' if no replication task has been executed."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Policy357Enum"
                            }
                        ],
                        "description": "Policy for how replicate will manage the local objects within the domain.\n\n* `all` - Replicate manages ALL local objects within the domain.\n* `labeled` - Replicate will only manage the objects created from a previous replication, unlabled local objects will be untouched.\n* `nodelete` - Replicate will not delete any local object whether they were created by replication or not."
                    }
                },
                "required": [
                    "api_root",
                    "base_url",
                    "name"
                ]
            },
            "User": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "description": "Users password. Set to ``null`` to disable password authentication."
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserGroup": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Name.",
                        "maxLength": 150
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserGroupResponse": {
                "type": "object",
                "description": "Serializer for Groups that belong to an User.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name.",
                        "maxLength": 150
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UserResponse": {
                "type": "object",
                "description": "Serializer for User.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "default": false,
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true,
                        "description": "Designates whether this user should be treated as active."
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Date joined"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserGroupResponse"
                        },
                        "readOnly": true
                    },
                    "hidden_fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "is_set": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_set",
                                "name"
                            ]
                        },
                        "readOnly": true,
                        "description": "List of hidden (write only) fields"
                    }
                },
                "required": [
                    "username"
                ]
            },
            "UserRole": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "role": {
                        "type": "string",
                        "minLength": 1
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "UserRoleResponse": {
                "type": "object",
                "description": "Serializer for UserRole.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "role": {
                        "type": "string"
                    },
                    "content_object": {
                        "type": "string",
                        "nullable": true,
                        "description": "pulp_href of the object for which role permissions should be asserted. If set to 'null', permissions will act on either domain or model-level."
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "domain": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Domain this role should be applied on, mutually exclusive with content_object."
                    }
                },
                "required": [
                    "content_object",
                    "role"
                ]
            },
            "VersionResponse": {
                "type": "object",
                "description": "Serializer for the version information of Pulp components",
                "properties": {
                    "component": {
                        "type": "string",
                        "description": "Name of a versioned component of Pulp"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the component (e.g. 3.0.0)"
                    },
                    "package": {
                        "type": "string",
                        "description": "Python package name providing the component"
                    },
                    "module": {
                        "type": "string",
                        "description": "Python module name of the component"
                    },
                    "domain_compatible": {
                        "type": "boolean",
                        "description": "Domain feature compatibility of component"
                    }
                },
                "required": [
                    "component",
                    "domain_compatible",
                    "module",
                    "package",
                    "version"
                ]
            },
            "WorkerResponse": {
                "type": "object",
                "description": "Base serializer for use with [pulpcore.app.models.Model][]\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "prn": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Pulp Resource Name (PRN)."
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time this resource was updated. Note: for immutable resources - like content, repository versions, and publication - pulp_created and pulp_last_updated dates will be the same."
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    },
                    "versions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "nullable": true
                        },
                        "readOnly": true,
                        "description": "Versions of the components installed."
                    },
                    "current_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task this worker is currently executing, or empty if the worker is not currently assigned to a task."
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}